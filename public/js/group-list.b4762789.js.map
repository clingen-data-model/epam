{"version":3,"sources":["webpack:///./src/components/groups/GroupForm.vue","webpack:///./src/components/groups/GroupForm.vue?468f","webpack:///./src/views/groups/GroupList.vue","webpack:///./src/views/groups/GroupList.vue?020a","webpack:///./src/forms/form_factory.js"],"names":["class","_createElementBlock","$options","_createBlock","_component_input_row","group_type_id","$event","errors","$setup","type","options","label","_component_dictionary_row","_createVNode","_Transition","name","mode","expert_panel","_hoisted_1","long_base_name","placeholder","input-class","short_base_name","_ctx","_hoisted_2","affiliation_id","_component_note","_hoisted_5","_toDisplayString","_hoisted_7","_hoisted_8","group_status_id","parent_id","emits","data","groupTypes","id","fullname","groupStatuses","configs","groups","statuses","newGroup","Group","parents","computed","group","get","this","$store","getters","set","value","commit","e","statusOptions","Object","values","map","status","titleCase","typeOptions","canSetType","hasPermission","typeDisplayName","toUpperCase","affiliationIdPlaceholder","cdwgs","namesDirty","isDirty","affiliationIdDirty","console","log","new","attributes","original","parentOptions","forEach","parent","push","displayName","sortBy","methods","save","resetErrors","updateGroup","$emit","createGroup","then","response","$router","params","uuid","isValidationError","dispatch","promises","saveGroupData","saveEpData","Promise","all","saveParent","saveName","saveStatus","submitFormData","method","url","attribute","status_id","resetData","cancel","getParentOptions","api","filter","g","emitUpdate","beforeMount","setup","props","context","formFactory","__exports__","render","_createElementVNode","onClick","_component_tabs_container","onTabChanged","_Fragment","_renderList","$data","def","_component_tab_item","key","_hoisted_4","_component_data_table","fields","sort","row-click-handler","row-class","cell-displayStatus","_withCtx","item","_component_badge","color","statusColor","displayStatus","isEp","currentStepAbbr","cell-coordinators","length","coordinator","idx","_hoisted_9","_component_router_link","to","person","_component_modal_dialog","title","size","_component_submission_wrapper","onSubmitted","groupForm","onCanceled","_component_group_form","ref","onSaved","components","GroupForm","SubmissionWrapper","loading","showCreateForm","loadedFor","tabDefinitions","typeId","isVcep","isGcep","field","desc","sortable","resolveValue","startCreateGroup","getGroupsForType","tabLabel","typeTab","find","t","where","store","useStore","router","useRouter","filterString","filteredGroups","normedString","toLowerCase","match","currentStepName","coordinators","c","goToItem","goToGroup","editing","hideForm","is_validation_error"],"mappings":"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","file":"js/group-list.b4762789.js","sourcesContent":["<template>\n    <div>\n        <input-row \n            v-if=\"canSetType\"\n            v-model=\"group.group_type_id\"\n            :errors=\"errors.group_type_id\"\n            type=\"select\"\n            :options=\"typeOptions\"\n            label=\"Type\" \n        />\n\n        <dictionary-row label=\"Type\" v-else>\n            {{typeDisplayName}}\n        </dictionary-row>\n        \n        <transition name=\"slide-fade-down\" mode=\"out-in\">\n            <div v-if=\"group.group_type_id > 2 && group.expert_panel\">\n                <input-row \n                    label=\"Long Base Name\" \n                    v-model=\"group.expert_panel.long_base_name\"\n                    @update:modelValue=\"emitUpdate\"\n                    placeholder=\"Long base name\"\n                    :errors=\"errors.long_base_name\"\n                    input-class=\"w-full\"\n                />\n                <input-row \n                    label=\"Short Base Name\" \n                    v-model=\"group.expert_panel.short_base_name\" \n                    @update:modelValue=\"emitUpdate\"\n                    placeholder=\"Short base name\"\n                    :errors=\"errors.short_base_name\"\n                    input-class=\"w-full\"\n                />\n                <div v-if=\"hasAnyPermission(['groups-manage'])\">\n                    <input-row \n                        label=\"Affiliation ID\" \n                        v-model=\"group.expert_panel.affiliation_id\" \n                        :placeholder=\"affiliationIdPlaceholder\"\n                        :errors=\"errors.affiliation_id\"  \n                        input-class=\"w-full\"\n                        @update:modelValue=\"emitUpdate\"\n                    >\n                        <template v-slot:label>\n                            Affiliation ID\n                            <note>admin-only</note>\n                        </template>\n                    </input-row>\n                </div>\n                <dictionary-row label=\"Affiliation ID\" v-else>\n                    <span v-if=\"group.expert_panel.affiliation_id\">{{group.expert_panel.affiliation_id}}</span>\n                    <span v-else class=\"text-gray-400\">{{'Not yet assigend'}}</span>\n                </dictionary-row>\n            </div>\n            <div v-else>\n                <input-row \n                    v-model=\"group.name\" \n                    placeholder=\"Name\" \n                    label=\"Name\" \n                    input-class=\"w-full\"\n                    :errors=\"errors.name\"\n                    @update:modelValue=\"emitUpdate\"\n                />\n            </div>\n        </transition>\n        <div v-if=\"hasPermission('groups-manage')\">\n            <input-row \n                v-model=\"group.group_status_id\"\n                type=\"select\"\n                :options=\"statusOptions\"\n                :errors=\"errors.group_status_id\"\n                @update:modelValue=\"emitUpdate\"\n            >\n                <template v-slot:label>\n                    Status:\n                    <note>admin-only</note>\n                </template>\n            </input-row>\n\n            <input-row\n                v-model=\"group.parent_id\"\n                type=\"select\"\n                :options=\"parentOptions\"\n                :errors=\"errors.parent_id\"\n                @update:modelValue=\"emitUpdate\"\n            >\n                <template v-slot:label>\n                    Parent group:\n                    <note>admin-only</note>\n                </template>\n            </input-row>\n        </div>\n    </div>\n</template>\n<script>\nimport {sortBy} from 'lodash'\nimport {isValidationError} from '@/http'\nimport {api} from '@/http'\nimport Group from '@/domain/group'\nimport configs from '@/configs'\nimport formFactory from '@/forms/form_factory'\n\nexport default {\n    name: 'GroupForm',\n    emits: [\n        'canceled',\n        'saved',\n        'update'\n    ],\n    data() {\n        return {\n            groupTypes: [\n                {id: 1, fullname: 'Working Group'},\n                {id: 2, fullname: 'Clinical Domain Working Group'},\n                {id: 3, fullname: 'GCEP'},\n                {id: 4, fullname: 'VCEP'},\n            ],\n            groupStatuses: configs.groups.statuses,\n            newGroup: new Group(),\n            parents: []\n        }\n    },\n    computed: {\n        group: {\n            get() {\n                const group = this.$store.getters['groups/currentItem'];\n                if (group) {\n                    return group;\n                }\n                return this.newGroup;\n            },\n            set (value) {\n                try {\n                    this.$store.commit('groups/addItem', value);\n                } catch (e) {\n                    this.newGroup = value;\n                }\n            }\n        },\n        statusOptions () {\n            return Object.values(this.groupStatuses).map(status => ({value: status.id, label: this.titleCase(status.name)}))\n        },\n        typeOptions () {\n            return this.groupTypes.map(type => ({value: type.id, label: type.fullname}));\n        },\n        canSetType() {\n            return this.hasPermission('groups-manage') && !this.group.id \n        },\n        typeDisplayName () {\n            if (!this.group.type) {\n                return \"🐇🥚\";\n            }\n            if (this.group.type.name) {\n                return (this.group.type.id < 3) \n                    ? this.group.type.name.toUpperCase() \n                    : this.group.expert_panel.type.name.toUpperCase();\n            }\n            return null;\n        },\n        affiliationIdPlaceholder () {\n            return 50000\n        },\n        cdwgs () {\n            return this.$store.getters['cdwgs/all']\n        },\n        namesDirty () {\n            return this.group.expert_panel.isDirty('long_base_name')\n                || this.group.expert_panel.isDirty('short_base_name');\n        },\n        affiliationIdDirty () {\n            console.log({\n                new: this.group.expert_panel.attributes.affiliation_id,\n                original: this.group.expert_panel.original.affiliation_id\n            });\n            return this.group.expert_panel.isDirty('affiliation_id');\n        },\n        parentOptions () {\n            const options = [{value: 0, label: 'None'}];\n            this.parents.forEach(parent => {\n                options.push({value: parent.id, label: parent.displayName})\n            })\n\n            return sortBy(options, 'label');\n        }\n    },\n    methods: {\n        async save() {\n            this.resetErrors();\n            try {\n                if (this.group.id) {\n                    await this.updateGroup();\n                    this.$emit('saved');\n\n                    // this.$store.dispatch('groups/find', this.group.uuid);\n                    // this.$store.commit('pushSuccess', 'Group info updated.');\n                    return;\n                } \n\n                const newGroup = await this.createGroup()\n                                    .then(response => response.data.data);\n                this.$emit('saved');\n                this.$store.commit('pushSuccess', 'Group created.');\n                this.$router.push({name: 'AddMember', params: {uuid: newGroup.uuid}});\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors;\n                }\n                throw error;\n            }\n        },\n        createGroup () {\n            let {\n                name, \n                parent_id, \n                group_type_id, \n                group_status_id\n            } = this.group.attributes;\n\n            const {short_base_name} = this.group.expert_panel;\n\n            if (name === null && this.group.expert_panel) {\n                name = this.group.expert_panel.long_base_name;\n            }\n\n            return this.$store.dispatch(\n                'groups/create', \n                {\n                    name,\n                    parent_id,\n                    group_type_id,\n                    group_status_id,\n                    short_base_name\n                }\n            );\n        },\n        updateGroup () {\n            const promises = [];\n            promises.push(this.saveGroupData());\n            if (this.group.expert_panel) {\n                promises.push(this.saveEpData());\n            }\n            \n            return Promise.all(promises);\n        },\n        saveGroupData () {\n            const promises = [];\n            if (this.group.isDirty('parent_id')) {\n                promises.push(this.saveParent());\n            }\n\n            if (this.group.isDirty('name')) {\n                promises.push(this.saveName())\n            }\n\n            if (this.group.isDirty('group_status_id')) {\n                promises.push(this.saveStatus())\n            }\n\n            return Promise.all(promises);\n        },\n        async saveEpData() {\n            const promises = []\n            if (this.namesDirty) {\n                const {long_base_name, short_base_name} = this.group.expert_panel;\n                promises.push(this.submitFormData({\n                    method: 'put',\n                    url: `/api/groups/${this.group.uuid}/expert-panel/name`, \n                    data: { long_base_name, short_base_name }\n                }));\n            }\n\n            if (this.affiliationIdDirty) {\n                promises.push(this.submitFormData({\n                    method: 'put',\n                    url: `/api/groups/${this.group.uuid}/expert-panel/affiliation-id`, \n                    data: { affiliation_id: this.group.expert_panel.affiliation_id }\n                }));\n            }\n\n            return await Promise.all(promises);\n        },\n\n        isDirty (attribute) {\n            return this.group[attribute] != this.group[attribute]\n        },\n        \n        saveParent () {\n            return this.submitFormData({\n                method: 'put',\n                url: `/api/groups/${this.group.uuid}/parent`, \n                data: { parent_id: this.group.parent_id }\n            })\n        },\n        saveName () {\n            return this.submitFormData({\n                method: 'put',\n                url: `/api/groups/${this.group.uuid}/name`,\n                data: {name: this.group.name}\n            })\n        },\n        saveStatus () {\n            return this.submitFormData({\n                method: 'put',\n                url: `/api/groups/${this.group.uuid}/status`,\n                data: {status_id: this.group.group_status_id}\n            })\n        },\n        resetData () {\n            if (this.group.uuid) {\n                this.$store.dispatch('groups/find', this.group.uuid);\n            }\n        },\n        cancel() {\n            if (this.group.uuid) {\n                this.resetData();\n            }\n            this.$emit('canceled');\n        },\n        async getParentOptions () {\n            this.parents = await api.get(`/api/groups`)\n                        .then(response => {\n                            return response.data\n                                .filter(group => group.id != this.group.id)\n                                .map(g => new Group(g))\n                        });\n        },\n        emitUpdate () {\n            this.$emit('update');\n        }\n    },\n    beforeMount() {\n        this.getParentOptions();\n        this.$store.dispatch('cdwgs/getAll');\n    },\n    setup (props, context) {\n        const {errors, submitFormData, resetErrors} = formFactory(props, context)\n\n        return {\n            errors,\n            submitFormData,\n            resetErrors\n        }\n    }\n}\n</script>","import { render } from \"./GroupForm.vue?vue&type=template&id=5323639a\"\nimport script from \"./GroupForm.vue?vue&type=script&lang=js\"\nexport * from \"./GroupForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <h1 class=\"flex justify-between items-center\">\n            Groups\n            <button v-if=\"hasPermission('groups-manage')\" class=\"btn btn-xs\" @click=\"startCreateGroup\">Create a group</button>\n        </h1>\n        <tabs-container @tab-changed=\"getGroupsForType\">\n            <tab-item v-for=\"def in tabDefinitions\" :label=\"def.label\" :key=\"def.label\">\n                <div class=\"text-center w-full\" v-if=\"loading\">Loading...</div>\n                <div v-else>\n                    <div class=\"mb-2\">\n                        Filter: <input type=\"text\" v-model=\"filterString\" placeholder=\"name,id,status,coordinator name\">\n                    </div>\n                    <data-table\n                        \n                        :data=\"filteredGroups.filter(def.filter)\" \n                        :fields=\"fields\" \n                        v-model:sort=\"sort\"\n                        :row-click-handler=\"goToGroup\"\n                        v-remaining-height\n                        row-class=\"cursor-pointer active:bg-blue-100\"\n                    >\n                        <template v-slot:cell-displayStatus=\"{item}\">\n                            <badge class=\"text-xs\" :color=\"item.statusColor\">\n                                {{item.displayStatus}}<span v-if=\"item.status.id == 1 && item.isEp()\">&nbsp;-&nbsp;{{item.expert_panel.currentStepAbbr}}</span>\n                            </badge>\n                        </template>\n                        <template v-slot:cell-coordinators=\"{value}\">\n                            <div v-if=\"value.length == 0\"></div>\n                            <span v-for=\"(coordinator, idx) in value\" :key=\"coordinator.id\">\n                                <span v-if=\"idx > 0\">, </span>\n                                <router-link \n                                    :to=\"{name: 'PersonDetail', params: {uuid: coordinator.person.uuid}}\" \n                                    class=\"link\"\n                                    @click.stop\n                                >\n                                    {{coordinator.person.name}}\n                                </router-link>\n                            </span>\n                        </template>\n                    </data-table>                \n                </div>\n            </tab-item>\n        </tabs-container>\n\n        <modal-dialog v-model=\"showCreateForm\" title=\"Create a New Group\" size=\"sm\">\n            <submission-wrapper @submitted=\"$refs.groupForm.save()\" @canceled=\"$refs.groupForm.cancel()\">\n                <group-form ref='groupForm' @canceled=\"showCreateForm=false\" @saved=\"showCreateForm = false\" />\n            </submission-wrapper>\n        </modal-dialog>\n    </div>\n</template>\n<script>\nimport {useStore} from 'vuex'\nimport {useRouter} from 'vue-router'\nimport {computed, ref} from 'vue'\nimport GroupForm from '@/components/groups/GroupForm'\nimport SubmissionWrapper from '@/components/groups/SubmissionWrapper'\n\nexport default {\n    name: 'ComponentName',\n    components: {\n        GroupForm,\n        SubmissionWrapper\n    },\n    props: {\n        \n    },\n    data() {\n        return {\n            loading: false,\n            showCreateForm: false,\n            loadedFor: {\n                'VCEPs': false,\n                'GCEPs': false,\n                'CDWGs': false,\n                'WGs': false,\n            },\n            tabDefinitions:[\n                {\n                    label: 'VCEPs',\n                    typeId: 4,\n                    filter: g => g.isVcep(),\n                },\n                {\n                    label: 'GCEPs',\n                    typeId: 3,\n                    filter: g => g.isGcep()\n                },\n                // Commented out for Feb. 2022 release.\n                // {\n                //     label: 'CDWGs',\n                //     typeId: 2,\n                //     filter: g => g.isCdwg()\n                // },\n                // {\n                //     label: 'WGs',\n                //     typeId: 1,\n                //     filter: g => g.isWg()\n                // }\n            ],\n            sort: {\n                field: 'id',\n                desc: false\n            },\n            fields: [\n                {\n                    name: 'id',\n                    label: 'ID',\n                    sortable: true\n                },\n                {\n                    name: 'name',\n                    label: 'Name',\n                    sortable: true,\n                    resolveValue: (item) => {\n                        return item.displayName\n                    }\n                },\n                {\n                    name: 'coordinators',\n                    sortable: false\n                },\n                {\n                    name: 'displayStatus',\n                    sortable: true,\n                    label: 'status'\n                },\n            ]\n        }\n    },\n    methods: {\n        startCreateGroup () {\n            this.showCreateForm = true;\n        },\n        async getGroupsForType (tabLabel) {\n            const typeTab = this.tabDefinitions.find(t => t.label === tabLabel);\n            if (this.loadedFor[tabLabel]) {\n                return;\n            }\n            this.loading = true;\n            await this.$store.dispatch('groups/getItems', {where: {group_type_id: typeTab.typeId}});\n            this.loadedFor[tabLabel] = true;\n            this.loading = false;\n        }\n\n    },\n    setup() {\n        const store = useStore();\n        const router = useRouter();\n\n        const filterString = ref(null);\n\n        const groups = computed(() => store.getters['groups/all']);\n        \n        const filteredGroups = computed(() => groups.value.filter(group => {\n            console.log(filterString.value)\n            if (!filterString.value) {\n                return true;\n            }\n            const normedString = filterString.value.toLowerCase();\n            console.log()\n            return group.name.toLowerCase().match(normedString)\n                || group.id == filterString.value\n                || group.status.name.toLowerCase().match(normedString)\n                || (\n                    group.expert_panel.currentStepName &&\n                    group.expert_panel.currentStepName.toLowerCase().match(normedString)\n                    )\n                || group.coordinators.filter(c => c.person.name.toLowerCase().match(normedString)).length > 0\n        }))\n\n        const goToItem = (item) => {\n            router.push({\n                name: 'GroupDetail',\n                params: {uuid: item.uuid}\n            })\n        }\n\n        return {\n            filterString,\n            groups,\n            filteredGroups,\n            goToItem,\n            goToGroup: goToItem,\n        }\n    }\n\n}\n</script>","import { render } from \"./GroupList.vue?vue&type=template&id=bee135c8\"\nimport script from \"./GroupList.vue?vue&type=script&lang=js\"\nexport * from \"./GroupList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {ref} from 'vue'\nimport is_validation_error from '@/http/is_validation_error'\nimport api from '@/http/api'\n\nexport const errors = ref({});\nconst editing = ref(false);\nconst hideForm = () => {\n    editing.value = false;\n    errors.value = {};\n}\nexport const submitFormData = async ({method, url, data}) => {\n    try {\n        // return await api.put(\n        return await api({\n            method,\n            url, \n            data\n        }).then(response => response.data.data)\n    } catch (error) {\n        if (is_validation_error(error)) {\n            errors.value = {...errors, ...error.response.data.errors}\n        }\n    }\n}\n\nexport const resetErrors = () => {\n    errors.value = {};\n}\n\nexport default () => {\n    return {\n        errors,\n        editing,\n        hideForm,\n        submitFormData,\n        resetErrors,\n    }\n}"],"sourceRoot":""}