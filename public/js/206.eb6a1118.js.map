{"version":3,"file":"js/206.eb6a1118.js","mappings":"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","sources":["webpack://epam/./src/views/Coi.vue","webpack://epam/./src/survey.js","webpack://epam/./src/views/Coi.vue?6bb8"],"sourcesContent":["<template>\n    <div>\n        <pre>{{lastCoiResponse}}</pre>\n        <card :title=\"verifying ? `Loading COI Form` : `COI Form not found`\" v-if=\"!codeIsValid\">\n            <div v-if=\"!verifying\">We couldn't find this COI.</div>\n        </card>\n        <card title=\"There's a problem\" v-if=\"!groupMemberId\">\n            We can't seem to find your membership id.  Please try refreshing.\n        </card>\n        <card :title=\"coiTitle\"  class=\"max-w-xl mx-auto relative\" v-if=\"codeIsValid\">\n            <p>\n                Review ClinGenâ€™s <coi-policy-link />\n            </p>\n            <div class=\"relative\">\n                <div\n                    v-for=\"question in survey.questions\"\n                    :key=\"question.name\"\n                            :class=\"question.class\"\n                >\n                    <transition name=\"slide-fade-down\">\n                        <input-row\n                            :label=\"question.question_text\"\n                            :errors=\"errors[question.name]\"\n                            :vertical=\"true\"\n                            v-show=\"showQuestion(question)\"\n                        >\n\n                            <textarea  v-if=\"question.type == 'text'\"\n                                class=\"w-full h-24\"\n                                v-model=\"response[question.name]\"\n                                :name=\"question.name\"\n                            ></textarea>\n\n                            <div v-if=\"question.type == 'multiple-choice'\">\n                                <label v-for=\"option in question.options\" :key=\"option.value\" class=\"mb-1\">\n                                    <input type=\"radio\"\n                                        :value=\"option.value\"\n                                        :name=\"question.name\"\n                                        v-model=\"response[question.name]\"\n                                    >\n                                    <div>{{option.label}}</div>\n                                </label>\n                            </div>\n\n                            <input\n                                type=\"text\"\n                                v-if=\"question.type == 'string'\"\n                                v-model=\"response[question.name]\"\n                                :name=\"question.name\"\n                            >\n                        </input-row>\n                    </transition>\n                </div>\n                <button-row :show-cancel=\"false\" @submitClicked=\"storeResponse()\">\n                    <slot v-if=\"saving\">\n                        Saving...\n                    </slot>\n                </button-row>\n            </div>\n        </card>\n        <note class=\"container\">GroupMemberId: {{groupMemberId}}</note>\n    </div>\n</template>\n<script>\nimport coiDef from '../../../surveys/coi.json'\nimport Survey from '@/survey'\nimport api from '@/http/api'\nimport is_validation_error from '@/http/is_validation_error';\n\nconst survey = new Survey(coiDef);\n\nexport default {\n    name: 'Coi',\n    props: {\n        code: {\n            required: true,\n            type: String\n        }\n    },\n    data() {\n        return {\n            coiDef: coiDef,\n            survey: survey,\n            response: survey.getResponseTemplate(),\n            errors: {},\n            epName: null,\n            verifying: false,\n            saved: false,\n            saving: false,\n            redirectCountdown: 5\n        }\n    },\n    computed: {\n        codeIsValid() {\n            return this.epName !== null;\n        },\n        coiTitle() {\n            return survey.name+' for '+this.epName;\n        },\n        membership () {\n            return this.$store.getters\n                    .currentUser\n                    .person.memberships.find(m => {\n                        return m.group.expert_panel\n                            && m.group.expert_panel.coi_code === this.code\n                    });\n        },\n        groupMemberId() {\n            if (this.membership) {\n                return this.membership.id;\n            }\n\n            return null;\n        },\n    },\n    watch: {\n        code: {\n            immediate: true,\n            handler () {\n                this.initResponseValues()\n            }\n        }\n    },\n    methods: {\n        initResponseValues() {\n            if (this.membership && this.membership.cois.length > 0) {\n                this.response = {...this.membership.cois[this.membership.cois.length -1].data};\n            }\n\n            return {}\n        },\n\n        showQuestion(question) {\n            if (!question.show) {\n                return true;\n            }\n            if (Array.isArray(question.show.value)) {\n                return question.show.value.indexOf(this.response[question.show.name]) > -1;\n            }\n            return (this.response[question.show.name] == question.show.value);\n        },\n        verifyCode() {\n            this.verifying = true;\n            api.get(`/api/coi/${this.code}/application`)\n                .then(response => {\n                    this.epName = response.data.display_name\n                })\n                .then(() => {\n                    this.verifying = false;\n                })\n        },\n        async storeResponse() {\n            this.saving = true;\n            try {\n                await this.$store.dispatch(\n                    'storeCoi',\n                    {\n                        code: this.code,\n                        groupMemberId: this.groupMemberId,\n                        coiData: this.response,\n                    }\n                );\n                this.saved = true;\n                await this.$store.dispatch('forceGetCurrentUser');\n                this.$router.push({name: 'Dashboard'});\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    this.errors = error.response.data.errors\n                } else {\n                    this.$store.commit('pushError', `You can not complete a COI for ${this.epName} because you are not a member.`)\n                }\n            }\n            this.saving = false;\n        },\n    },\n    async mounted() {\n        this.verifyCode();\n        await this.$store.dispatch('getCurrentUser')\n    }\n}\n</script>\n","class Question {\n    constructor(question) {\n        this.question_text = question.question;\n        this.name = question.name;\n        this.options = question.options;\n        this.validationRules = question.validation;\n        this.type = question.type;\n        this.show = question.show;\n        this.class = question.class;\n    }\n}\n\nclass YesNoQuestion extends Question {\n    constructor(question) {\n        super(question)\n        this.type = 'multiple-choice';\n        this.options = [{\n                label: 'Yes',\n                value: 1\n            },\n            {\n                label: 'No',\n                value: 0\n            }\n        ];\n    }\n\n\n}\n\nfunction makeQuestion(questionDef) {\n    if (questionDef.type == 'yes-no') {\n        return new YesNoQuestion(questionDef);\n    }\n\n    return new Question(questionDef);\n}\n\nclass Survey {\n    constructor(surveyDefinition) {\n        this._name = surveyDefinition.name;\n        this._questions = surveyDefinition.questions.map(q => makeQuestion(q));\n\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get questions() {\n        return this._questions\n    }\n\n    responseIsValid(response) {\n        response;\n        return true;\n    }\n\n    getResponseTemplate() {\n        const rsp = {};\n        this.questions.forEach(q => {\n            rsp[q.name] = null\n        });\n        return rsp;\n\n    }\n}\n\nexport default Survey","import { render } from \"./Coi.vue?vue&type=template&id=068e987b\"\nimport script from \"./Coi.vue?vue&type=script&lang=js\"\nexport * from \"./Coi.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_createElementVNode","_toDisplayString","_ctx","$options","_createBlock","_component_card","title","$data","_hoisted_1","_createVNode","_component_coi_policy_link","_Fragment","_renderList","questions","question","key","name","_Transition","_component_input_row","label","question_text","errors","vertical","type","$event","_hoisted_6","options","option","value","_component_button_row","onSubmitClicked","_renderSlot","_component_note","Question","constructor","this","validationRules","validation","show","YesNoQuestion","super","makeQuestion","questionDef","Survey","surveyDefinition","_name","_questions","map","q","responseIsValid","response","getResponseTemplate","rsp","forEach","survey","coiDef","props","code","required","String","data","epName","verifying","saved","saving","redirectCountdown","computed","codeIsValid","coiTitle","membership","$store","getters","currentUser","person","memberships","find","m","group","expert_panel","coi_code","groupMemberId","id","watch","immediate","handler","initResponseValues","methods","cois","length","showQuestion","Array","isArray","indexOf","verifyCode","api","then","display_name","async","dispatch","coiData","$router","push","error","is_validation_error","commit","__exports__","render"],"sourceRoot":""}