{"version":3,"file":"js/397.ed9d0a82.js","mappings":"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","sources":["webpack://epam/./src/components/expert_panels/AttestationGcep.vue","webpack://epam/./src/components/expert_panels/AttestationGcep.vue?df81","webpack://epam/./src/components/expert_panels/AttestationNhgri.vue","webpack://epam/./src/components/expert_panels/AttestationNhgri.vue?3f3a","webpack://epam/./src/components/expert_panels/AttestationReanalysis.vue","webpack://epam/./src/components/expert_panels/AttestationReanalysis.vue?c61e","webpack://epam/./src/components/expert_panels/GcepGeneList.vue","webpack://epam/./src/components/expert_panels/GcepGeneList.vue?0fda","webpack://epam/./src/components/expert_panels/MembershipDescriptionForm.vue","webpack://epam/./src/components/expert_panels/MembershipDescriptionForm.vue?e70c","webpack://epam/./src/components/expert_panels/ScopeDescriptionForm.vue","webpack://epam/./src/components/expert_panels/ScopeDescriptionForm.vue?a0ca","webpack://epam/./src/components/expert_panels/VcepGeneList.vue","webpack://epam/./src/components/expert_panels/VcepGeneList.vue?6804"],"sourcesContent":["<template>\n    <div>\n        <p>\n            The Gene Curation Expert Panel (GCEP) leaders(s) will complete the checkbox attestations document below on behalf of the GCEP.\n        </p>\n        <ul class=\"ml-4 mt-2\">\n            <li>\n                <input-row :errors=\"errors.utilize_gt\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.utilize_gt\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        This GCEP will utilize the ClinGen Gene Tracker for documentation of all precuration information, consistent with the current Lumping and Splitting working group guidance, for gene-disease relationships.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.utilize_gci\" :hide-label=\"true\">\n                    <checkbox\n                        v-model=\"group.expert_panel.utilize_gci\"\n                        :disabled=\"disabled\"\n                        @update:modelValue=\"emitUpdate(), checkCompleteness()\"\n                    >\n                        This GCEP will utilize the ClinGen Gene Curation Interface for documentation of all gene-disease validity classifications.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.curations_publicly_available\" :hide-label=\"true\">\n                    <checkbox\n                        v-model=\"group.expert_panel.curations_publicly_available\"\n                        :disabled=\"disabled\"\n                        @update:modelValue=\"emitUpdate(), checkCompleteness()\"\n                    >\n                        All curations completed by this group will be made publicly available through the ClinGen website immediately upon completion.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.pub_policy_reviewed\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.pub_policy_reviewed\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        The <publication-policy-link /> has been reviewed and a manuscript concept sheet will be submitted to the NHGRI and  ClinGen Steering Committee before the group prepares a publication for submission.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.draft_manuscripts\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.draft_manuscripts\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        Draft manuscripts will be submitted to the ClinGen Gene Curation WG for review prior to submission.\n                        Email: <a href=\"mailto:genecuration@clinicalgenome.org\">genecuration@clinicalgenome.org</a>\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.recuration_process_review\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.recuration_process_review\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        The ClinGen <gcep-recuration-process-link>Gene-Disease Validity Recuration Process</gcep-recuration-process-link> has been reviewed.\n                    </checkbox>\n                </input-row>\n            </li>\n        </ul>\n\n        <p>\n            Biocurators are expected to become familiar with the ClinGen <training-materials-link /> located on <training-materials-link>ClinicalGenome.org</training-materials-link>. Biocurators are requested to join the mailing list for ClinGen Biocurator Working Group, and expected to attend those calls that focus on gene curation SOP and/or framework updates.\n        </p>\n\n        <ul class=\"ml-4 mt-2\">\n            <li>\n                <input-row :errors=\"errors.biocurator_training\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.biocurator_training\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        Biocurators have received training and/or there is a plan in place to train any biocurators who have not received all training yet.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <checkbox v-model=\"gci_training\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                    Biocurators are trained on the use of the Gene Curation Interface (GCI) and/or there is a plan in place to train any biocurators who are not yet trained on the use of the GCI”\n                </checkbox>\n                <input-row\n                    v-model=\"group.expert_panel.gci_training_date\"\n                    @update:modelValue=\"emitUpdate(), checkCompleteness()\"\n                    v-show=\"gci_training\"\n                    :errors=\"gciTrainingErrors\"\n                    label=\"Date Trained\"\n                    type=\"date\"\n                    class=\"ml-6\"\n                />\n            </li>\n            <li>\n                <input-row :errors=\"errors.biocurator_mailing_list\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.biocurator_mailing_list\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        Biocurators have joined the Biocurator WG mailing list and/or there is a plan in place to have them join mailing list.\n                        <br>The calls occur on the 2nd and 4th Thursdays from 12-1pm.\n                    </checkbox>\n                </input-row>\n            </li>\n        </ul>\n    </div>\n</template>\n<script>\nimport {api, isValidationError} from '@/http'\n\nexport default {\n    name: 'AttestationGcep',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            gci_training: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        },\n        gciTrainingErrors () {\n            const trainingErrors = this.errors.gci_training || [];\n            const dateErrors = this.errors.gci_training_date || [];\n            return [...trainingErrors, ...dateErrors];\n        },\n        gci_training_comp () {\n            return Boolean(this.group.expert_panel.gci_training_date)\n        }\n    },\n    watch: {\n        group: {\n            immediate: true,\n            handler: function (to) {\n                this.gci_training = Boolean(to.expert_panel.gci_training_date)\n            }\n        },\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/gcep`,\n                this.group.expert_panel.attributes)\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        emitUpdate () {\n            this.$emit('update');\n        },\n        checkCompleteness () {\n            if (this.group.expert_panel.utilize_gt\n                && this.group.expert_panel.utilize_gci\n                && this.group.expert_panel.curations_publicly_available\n                && this.group.expert_panel.pub_policy_reviewed\n                && this.group.expert_panel.draft_manuscripts\n                && this.group.expert_panel.recuration_process_review\n                && this.group.expert_panel.biocurator_training\n                && this.group.expert_panel.gci_training_date !== null\n                && this.group.expert_panel.biocurator_mailing_list\n                && this.group.expert_panel.gcep_attestation_date === null\n            ) {\n                this.group.expert_panel.gcep_attestation_date = new Date();\n                return;\n            }\n            this.group.expert_panel.gcep_attestation_date = null;\n        }\n    },\n}\n</script>\n","import { render } from \"./AttestationGcep.vue?vue&type=template&id=77fadcc4\"\nimport script from \"./AttestationGcep.vue?vue&type=script&lang=js\"\nexport * from \"./AttestationGcep.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <p v-if=\"group.isVcep()\">\n            Curated variants and genes are expected to be approved and posted for the community as soon as possible as described in Section 2.4 of the <vcep-protocol-link />. \n            Note that upon approval, a VCEP must finalize their set of variants for upload to the ClinGen Evidence Repository within 30 days.\n        </p>\n        <p v-if=\"group.is_gcep\">\n            Curated genes and variants are expected to be approved and posted for the community as soon as possible and should not wait for the publication of a manuscript.\n        </p>\n\n        <p class=\"my-4\">\n            <input-row label=\"\" :vertical=\"true\">\n                <checkbox \n                    :disabled=\"disabled\" \n                    v-model=\"attestation\" \n                    id=\"nhgri-checkbox\" \n                    :label=\"checkboxLabel\"\n                />\n            </input-row>\n        </p>\n\n        <p v-if=\"group.is_vcep_or_scvcep\">\n            Please review the\n            <publication-policy-link />\n            and refer to guidance on submissions to a preprint server (e.g. bioRxiv or medRxiv).\n        </p>\n        <p v-if=\"group.is_gcep\">\n            <em>It is expected that, whenever possible, Expert Panel manuscripts will be pre-published (e.g. medRXiv) . If the authors do not anticipate submitting their manuscript to a prepublication resource they must provide a written justification.</em>\n        </p>\n    </div>\n</template>\n<script>\nimport api from '@/http/api';\nimport is_validation_error from '../../http/is_validation_error';\n\nexport default {\n    name: 'NHGRIDataAvailability',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {                \n                this.$store.commit('groups/addItem', value);\n            }\n        },\n        attestation: {\n            get () {\n                return Boolean(this.group.expert_panel.nhgri_attestation_date);\n            },\n            set (value) {\n                if (value) {\n                    this.group.expert_panel.nhgri_attestation_date = new Date();\n                } else {\n                    this.group.expert_panel.nhgri_attestation_date = null;\n                }\n                this.$emit('update');                \n            }\n        },\n        checkboxLabel () {\n            if (this.group.is_vcep) {\n                return \"I understand that once a variant is approved in the VCI it will become publicly available in the Evidence Repository. They should not be held for publication.\"\n            }\n\n            return \"Please check box to confirm your understanding that once a gene is approved in the GCI, the group should utilize the “publish” functionality within the GCI to make the curation publicly available on the ClinGen website (https://clinicalgenome.org/). They should not be held for publication.\"\n        }\n    },\n    methods: {\n        async save () {\n            if (this.attestation) {\n                try {\n                    await api.post(`/api/groups/${this.group.uuid}/application/attestations/nhgri`, {'attestation': this.attestation})\n                } catch (error) {\n                    if (is_validation_error(error)) {\n                        this.errors = error.response.data.errors\n                    }\n                }\n            }\n        }\n    }\n}\n</script>","import { render } from \"./AttestationNhgri.vue?vue&type=template&id=4b6d857d\"\nimport script from \"./AttestationNhgri.vue?vue&type=script&lang=js\"\nexport * from \"./AttestationNhgri.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <p>\n            Expert Panels are expected to keep their variant interpretations up-to-date and to expedite the re-review of variants that have a conflicting assertion submitted to ClinVar after the Expert Panel submission. Please check all 3 boxes below to attest that the VCEP will follow the ClinGen-approved schedule described below <strong><em>or</em></strong> describe other plans at the bottom of the section.\n        </p>\n        <ul class=\"ml-4 mt-2\">\n            <li>\n                <input-row :errors=\"errors.reanalysis_conflicting\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.reanalysis_conflicting\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        VCEPs are expected to reassess any newly submitted conflicting assertion in ClinVar from a one star submitter or above and attempt to resolve or address the conflict within 6 months of being notified about the conflict from ClinGen. Please reach out to the submitter if you need additional information about the conflicting assertion.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.reanalysis_review_lp\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.reanalysis_review_lp\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        VCEPs are expected to re-review all LP and VUS classifications made by the EP at least every 2 years to see if new evidence has emerged to re-classify the variants\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.reanalysis_review_lb\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.reanalysis_review_lb\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        VCEPs are expected to re-review any LB classifications when new evidence is available or when requested by the public via the ClinGen website.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.reanalysis_other\" :hide-label=\"true\">\n                    <checkbox v-model=\"otherCheckbox\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        Plans differ from the expectations above.\n                    </checkbox>\n                    <transition name=\"slide-fade-down\">\n                        <div class=\"ml-4\" v-if=\"otherCheckbox\">\n                            <label for=\"reanalysis-other-textarea\">Explain differences:</label>\n                            <textarea \n                                v-model=\"group.expert_panel.reanalysis_other\" \n                                class=\"w-full\"\n                                id=\"reanalysis-other-textarea\"\n                                :disabled=\"disabled\"\n                                @update:modelValue=\"$emit('update'), checkCompleteness()\"\n                            ></textarea>\n                        </div>\n                    </transition>\n                </input-row>\n            </li>\n        </ul>\n    </div>\n</template>\n<script>\nimport api from '@/http/api'\nimport is_validation_error from '../../http/is_validation_error'\n\nexport default {\n    name: 'ReanalysisForm',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            otherCheckbox: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            }, \n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        }\n    },\n    watch: {\n        otherCheckbox (to) {\n            if (!to) {\n                this.group.expert_panel.reanalysis_other = null;\n            }\n        }\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/reanalysis`, this.group.expert_panel)\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        checkCompleteness () {\n            const checkedStandard = this.group.expert_panel.reanalysis_conflicting\n                && this.group.expert_panel.reanalysis_review_lp\n                && this.group.expert_panel.reanalysis_review_lb;\n            if (checkedStandard\n                ||  (\n                    this.otherCheckbox \n                    && Boolean(this.group.expert_panel.reanalysis_other)\n                )\n                && this.group.expert_panel.gcep_attestation_date === null\n            ) {\n                this.group.expert_panel.reanalysis_attestation_date = new Date();\n                return;\n            }\n            this.group.expert_panel.reanalysis_attestation_date = null;\n        }\n    }\n}\n</script>","import { render } from \"./AttestationReanalysis.vue?vue&type=template&id=0ab54e02\"\nimport script from \"./AttestationReanalysis.vue?vue&type=script&lang=js\"\nexport * from \"./AttestationReanalysis.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <h4 class=\"flex justify-between mb-2\">\n            Gene List\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing && !readonly\"\n                @click=\"showForm\"\n            ></edit-icon-button>\n        </h4>\n        <div v-if=\"editing\">\n            <input-row \n                v-model=\"genesAsText\"\n                type=\"large-text\"\n                label=\"List the gene symbols for the genes the Expert Panel plans to curate.  Separate genes by commas, spaces, or new lines.\"\n                :errors=\"errors.genes\"\n                @update:modelValue=\"$emit('geneschanged'); $emit('update')\"\n                placeholder=\"ABC, DEF1, BEAN\"\n                vertical\n            />\n        </div>\n        <div v-else>\n            <p v-if=\"genesAsText\" style=\"text-indent: 1rem;\">{{genesAsText}}</p>\n            <div class=\"well cursor-pointer\" v-else @click=\"showForm\">\n                {{ loading ? `Loading...` : `No genes have been added to the gene list.`}}\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport {ref, watch, computed, onMounted} from 'vue';\nimport {useStore} from 'vuex';\nimport formFactory from '@/forms/form_factory'\nimport is_validation_error from '@/http/is_validation_error'\nimport api from '@/http/api'\n\nexport default {\n    name: 'GcepGeneList',\n    components: {\n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    computed: {\n        canEdit () {\n            return this.hasAnyPermission(['groups-manage', ['application-edit', this.group]]);\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n        'update:editing',\n        'geneschanged',\n        'update'\n    ],\n    methods: {\n        showForm () {\n            if (this.canEdit) {\n                this.resetErrors();\n                this.$emit('update:editing', true);\n            }\n        }\n\n    },\n    setup(props, context) {\n        const store = useStore();\n\n        const loading = ref(false);\n        const genesAsText = ref(null);\n\n        const {errors, resetErrors} = formFactory(props, context)\n\n        const group = computed({\n            get() {\n                return store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                store.commit('groups/addItem', value)\n            }\n        });\n\n        const hideForm = () => {\n            context.emit('update:editing', false);\n            errors.value = {};\n        }\n        const cancel = () => {\n            resetErrors();\n            getGenes();\n            hideForm();\n            context.emit('canceled');\n        }\n\n        const syncGenesAsText = () => {\n            if (!group.value.expert_panel) {\n                return;\n            }\n            genesAsText.value = group.value.expert_panel.genes\n                ? group.value.expertPanel.genes.join(', ')\n                : null\n        };\n        const getGenes = async () => {\n            if (!group.value.uuid) {\n                return;\n            }\n            loading.value = true;\n            try {\n                await store.dispatch('groups/getGenes', group.value);\n                genesAsText.value = group.value.expert_panel.genes.map(g => g.gene_symbol).join(\", \");\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n            loading.value = false;\n            \n        }\n        const save = async () => {\n            const genes = genesAsText.value \n                            ? genesAsText.value\n                                .split(new RegExp(/[, \\n]/))\n                                .filter(i => i !== '')\n                            : [];\n\n            try {\n                await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, {genes});\n                hideForm();\n                context.emit('saved')\n                getGenes();\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    const messages = error.response.data.errors\n                    if (messages.group) {\n                        messages.group\n                            .forEach(m => {\n                                store.pushError(m)\n                            })\n                    }\n                    const geneMessages = Object.keys(messages).map(key => {\n                        const [g, geneIdx] = key.split('.')\n                        if (g == 'genes') {\n                            if (geneIdx) {\n                                return `Gene #${(parseInt(geneIdx)+1)}, \"${genes[geneIdx]}\" wasn't found in our records.  Please confirm it is currently an approved HGNC gene symbol.`\n                            }\n                            return messages[key];\n                        }\n                    });\n                    errors.value = {\n                        genes: geneMessages\n                    }\n                }\n            }\n        };\n\n\n        watch(() => store.getters['groups/currentItem'], (to, from) => {\n            if (to.id && (!from || to.id != from.id)) {\n                // syncGenesAsText();\n                getGenes();\n            }\n        })\n\n        onMounted(() => {\n            getGenes();\n        })\n\n        watch(() => group.value.expert_panel.genes, () => {\n            // syncGenesAsText();\n        })\n\n        return {\n            group,\n            genesAsText,\n            loading,\n            errors,\n            resetErrors,\n            hideForm,\n            cancel,\n            syncGenesAsText,\n            save,\n        }\n    }\n}\n</script>","import { render } from \"./GcepGeneList.vue?vue&type=template&id=3c80bb1d\"\nimport script from \"./GcepGeneList.vue?vue&type=script&lang=js\"\nexport * from \"./GcepGeneList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <header class=\"flex justify-between items-center\">\n            <h4>Description of Expertise</h4>\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage'], ['edit-info', group]) && !editing\"\n                @click=\"$emit('update:editing', true)\"\n            ></edit-icon-button>\n        </header>\n        <div class=\"mt-4\">\n            <transition name=\"fade\" mode=\"out-in\">\n                <input-row \n                    v-model=\"group.expert_panel.membership_description\"\n                    label=\"Describe the expertise of VCEP members who regularly use the ACMG/AMP guidelines to classify variants and/or review variants during clinical laboratory case sign-out.\" \n                    v-if=\"editing\" \n                    :errors=\"errors.membership_description\"\n                    type=\"large-text\"\n                    vertical\n                    @update:modelValue=\"emitUpdate\"\n                />\n                <div v-else>\n                    <markdown-block \n                        v-if=\"group.expert_panel.membership_description\" \n                        :markdown=\"group.expert_panel.membership_description\"\n                    />\n                    <p class=\"well\" v-else>\n                        A description of expertise has not yet been provided.\n                    </p>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'MembershipDescriptionForm',\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({})\n        }\n    },\n    emits: [\n        'update:editing',\n        'saved',\n        'canceled',\n        'update'\n    ],\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value);\n            }\n        }\n    },\n    methods: {\n        emitUpdate () {\n            this.$emit('update');\n        }\n    }\n}\n</script>","import { render } from \"./MembershipDescriptionForm.vue?vue&type=template&id=0a8ade8d\"\nimport script from \"./MembershipDescriptionForm.vue?vue&type=script&lang=js\"\nexport * from \"./MembershipDescriptionForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <header class=\"flex justify-between items-center\">\n            <h4>Description of Scope</h4>\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing\"\n                @click=\"$emit('update:editing', true)\"\n            ></edit-icon-button>\n        </header>\n        <div class=\"mt-2\">\n            <transition name=\"fade\" mode=\"out-in\">\n                <input-row \n                    v-if=\"editing\"\n                    v-model=\"group.expert_panel.scope_description\"\n                    :errors=\"errors.scope_description\"\n                    type=\"large-text\"\n                    vertical\n                    @update:modelValue=\"$emit('update')\"\n                >\n                    <template v-slot:label>\n                        Describe the scope of work of the Expert Panel including\n                        the disease area(s), genes being addressed, and any\n                        specific rational for choosing the condition(s). See the\n                        <vcep-protocol-link v-if=\"group.is_vcep_or_scvcep\" />\n                        <gcep-quick-guide-link v-if=\"group.is_gcep\" /> for more\n                        information.\n                    </template>\n                </input-row>\n                <div v-else>\n                    <markdown-block \n                        v-if=\"group.expert_panel.scope_description\" \n                        :markdown=\"group.expert_panel.scope_description\">\n                    </markdown-block>\n                    \n                    <p class=\"well cursor-pointer\" v-else @click=\"showForm\">\n                        A description of expertise has not yet been provided.\n                    </p>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n<script>\nimport Group from '@/domain/group'\nimport GcepQuickGuideLink from '../links/GcepQuickGuideLink.vue';\n\nexport default {\n    name: \"scopeDescriptionForm\",\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({}),\n        },\n    },\n    emits: [\n        \"update:editing\",\n        \"update:group\",\n        \"update\"\n    ],\n    computed: {\n        group: {\n            get() {\n                return this.$store.getters[\"groups/currentItem\"] || new Group();\n            },\n            set(value) {\n                this.$store.commit(\"groups/addItem\", value);\n            }\n        },\n        scopeDescription: {\n            get: function () {\n                return this.group.expert_panel.scope_description;\n            },\n            set: function (value) {\n                const groupCopy = this.group.clone();\n                groupCopy.expert_panel.scope_description = value;\n                this.$emit(\"update:group\", groupCopy);\n            }\n        }\n    },\n    components: { GcepQuickGuideLink }\n}\n</script>","import { render } from \"./ScopeDescriptionForm.vue?vue&type=template&id=47731955\"\nimport script from \"./ScopeDescriptionForm.vue?vue&type=script&lang=js\"\nexport * from \"./ScopeDescriptionForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <header class=\"flex justify-between items-center\">\n            <h4>Gene/Disease List</h4>\n        </header>\n        <div class=\"my-2\">\n            <table class=\"border-none\" v-if=\"genes\">\n                <thead>\n                    <tr>\n                        <th style=\"min-width: 10rem\">HGNC Symbol</th>\n                        <th style=\"min-width: 15rem\">Disease</th>\n                        <!-- <th style=\"max-width: 9rem\">Date Approved</th> -->\n                        <th\n                            v-if=\"canEdit\"\n                            style=\"width: 5rem\"\n                        ></th>\n                    </tr>\n                </thead>\n                <transition name=\"fade\" mode=\"out-in\">\n                    <tbody v-if=\"genes.length == 0\">\n                        <tr>\n                            <td colspan=\"4\">\n                                <div class=\"p-2 text-center font-bold\">\n                                    <span v-if=\"loading\">Loading...</span>\n                                    <div v-else>\n                                        <p>There are no gene/disease pairs in the gene list.</p>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                    <tbody v-else>\n                        <!-- <transition-group name=\"slide-fade-down\"> -->\n                            <tr v-for=\"gene in orderedGenes\" :key=\"gene.id\">\n                                <template v-if=\"!gene.edit\">\n                                    <td>{{gene.gene_symbol}}</td>\n                                    <td>{{gene.disease_name}}</td>\n                                    <!-- <td>{{formatDate(gene.date_approved)}}</td> -->\n                                    <td\n                                        v-if=\"canEdit\"\n                                    >\n                                        <div v-if=\"!gene.edit\">\n                                            <dropdown-menu\n                                                :hide-cheveron=\"true\"\n                                                class=\"relative\"\n                                                v-if=\"!gene.toDelete\"\n                                            >\n                                                <template v-slot:label>\n                                                    <button class=\"btn btn-xs\">&hellip;</button>\n                                                </template>\n                                                <dropdown-item @click=\"edit(gene)\">Edit</dropdown-item>\n                                                <dropdown-item @click=\"confirmRemove(gene)\">Remove</dropdown-item>\n                                            </dropdown-menu>\n\n                                            <!-- <div v-if=\"gene.toDelete\">\n                                                <note>set for deletion in {{gene.removeCountdown}} seconds.</note>\n                                                <button @click=\"cancelPendingRemove(gene)\" class=\"btn btn-xs\">Cancel</button>\n                                            </div> -->\n                                        </div>\n                                    </td>\n                                </template>\n                                <template v-else>\n                                    <td>\n                                        <input-row label=\"\" :errors=\"errors.hgnc_id\" :vertical=\"true\">\n                                            <gene-search-select v-model=\"gene.gene\"></gene-search-select>\n                                        </input-row>\n                                    </td>\n                                    <!-- <td colspan=\"2\"> -->\n                                    <td>\n                                        <input-row label=\"\" :errors=\"errors.mondo_id\" :vertical=\"true\">\n                                            <disease-search-select v-model=\"gene.disease\"></disease-search-select>\n                                        </input-row>\n                                    </td>\n                                    <td>\n                                        <button class=\"btn btn-xs\" @click=\"updateCancel(gene)\">Cancel</button>\n                                        <button class=\"btn blue btn-xs\" @click=\"updateGene(gene)\">Save</button>\n                                    </td>\n                                </template>\n                            </tr>\n                        <!-- </transition-group> -->\n                    </tbody>\n                </transition>\n\n                <tbody v-if=\"canEdit\">\n                        <tr>\n                            <td>\n                                <input-row label=\"\" :errors=\"errors[`genes.0.hgnc_id`]\" :vertical=\"true\">\n                                    <gene-search-select v-model=\"newGene.gene\" @update:modelValue=\"debounceSave\" />\n                                </input-row>\n                            </td>\n                            <td colspan=\"4\">\n                                <input-row label=\"\" :errors=\"errors[`diseases.0.hgnc_id`]\" :vertical=\"true\">\n                                    <disease-search-select v-model=\"newGene.disease\" @update:modelValue=\"debounceSave\" />\n                                </input-row>\n                            </td>\n                        </tr>\n                </tbody>\n            </table>\n        </div>\n        <modal-dialog v-model=\"showConfirmRemove\" title=\"Confirm gene/disease pair delete.\">\n            <p>You are about to delete the gene/disease pair {{selectedGene.gene_symbol}}/{{selectedGene.disease_name}}.  Are you sure you want to continue?</p>\n            <button-row\n                submit-text=\"Yes, delete it.\"\n                cancel-text=\"No, cancel\"\n                @submitted=\"remove(selectedGene)\"\n                @canceled=\"cancelRemove\"\n            ></button-row>\n        </modal-dialog>\n    </div>\n</template>\n<script>\nimport {api} from '@/http'\nimport {ref, computed, onMounted} from 'vue';\nimport {debounce} from 'lodash'\nimport {useStore} from 'vuex';\nimport GeneSearchSelect from '@/components/forms/GeneSearchSelect.vue'\nimport DiseaseSearchSelect from '@/components/forms/DiseaseSearchSelect.vue'\nimport is_validation_error from '@/http/is_validation_error'\nimport {hasAnyPermission} from '@/auth_utils'\n\nexport default {\n    name: 'VcepGeneList',\n    components: {\n        GeneSearchSelect,\n        DiseaseSearchSelect,\n    },\n    props: {\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n        'editing'\n    ],\n    computed: {\n        selectedGeneSymbol () {\n            return this.selectedGene && this.selectedGene.gene ?  this.selectedGene.gene.gene_symbol : 'Unknown Gene Symbols'\n        },\n        selectedDiseaseName () {\n            return this.selectedGene && this.selectedGene.disease ?  this.selectedGene.disease.name : 'Unknown Disease Name'\n        }\n    },\n    setup(props, context) {\n        const store = useStore();\n\n        const showConfirmRemove = ref(false);\n        const selectedGene = ref({gene: {}, disease: {}});\n\n        const group = computed(() => {\n            return store.getters['groups/currentItemOrNew'];\n        });\n\n\n        const newGene = ref({gene: null, disease: null});\n\n        const loading = ref(false);\n        const errors = ref({});\n        const genes = ref([]);\n        const orderedGenes = computed(() => {\n            const sortedGenes = [...genes.value];\n            sortedGenes.sort((a,b) => {\n                if (a.gene_symbol == b.gene_symbol) {\n                    return 0;\n                }\n                return (a.gene_symbol > b.gene_symbol) ? 1 : -1;\n            });\n            return sortedGenes;\n        })\n\n        const clearNewGene = () => {\n            newGene.value = {gene: null, disease: null};\n            errors.value = {};\n        }\n\n        const edit = (gene) => {\n            gene.edit = true;\n        }\n\n        const clearRemoveCountdown = (gene) => {\n            if (gene.removeTimeout) {\n                clearTimeout(gene.removeTimeout);\n                clearInterval(gene.removeInterval);\n                gene.removeCountdown = 10;\n            }\n        }\n\n        const clearRemovalFlags = (gene) => {\n            delete(gene.toDelete);\n            delete(gene.removeInterval);\n            delete(gene.removeTimeout);\n        }\n\n        const cancelPendingRemove = (gene) => {\n            clearRemoveCountdown(gene);\n            clearRemovalFlags(gene);\n        }\n\n        const confirmRemove = (gene) => {\n            selectedGene.value = gene;\n            showConfirmRemove.value = true;\n        }\n\n        const remove = async (gene) => {\n            try {\n                await api.delete(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`)\n                await getGenes();\n                cancelRemove();\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n        }\n\n        const cancelRemove = () => {\n            selectedGene.value = {gene: {}, disease: {}};\n            showConfirmRemove.value = false;\n        }\n\n        const getGenes = async () => {\n            if (!group.value.uuid)  {\n                return;\n            }\n            loading.value = true;\n            try {\n                genes.value = await api.get(`/api/groups/${group.value.uuid}/expert-panel/genes?with[]=gene&with[]=disease`)\n                    .then(response => response.data);\n\n                // need to set genes on the expert_panel for requirements validation\n                group.value.expert_panel.genes = genes.value;\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n            loading.value = false;\n        }\n\n        const save = async () => {\n            try {\n                if (newGene.value.gene !== null && newGene.value.disease !== null) {\n\n                    await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, {\n                        genes: [{\n                            hgnc_id: newGene.value.gene.hgnc_id,\n                            mondo_id: newGene.value.disease.mondo_id\n                        }]\n                    });\n                    await getGenes();\n\n                    clearNewGene();\n                }\n\n                errors.value = {};\n                context.emit('saved')\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    errors.value = error.response.data.errors\n                }\n            }\n        };\n\n        const debounceSave = debounce(save, 500)\n\n        const updateGene = async (gene) => {\n            try {\n                gene.hgnc_id = gene.gene.hgnc_id;\n                gene.mondo_id = gene.disease.mondo_id;\n                await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`, gene);\n                await getGenes();\n                delete(gene.edit);\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    errors.value = error.response.data.errors\n                }\n            }\n        }\n        const updateCancel = gene => {\n            delete(gene.edit);\n        }\n\n        const cancel = () => {\n            clearNewGene();\n        }\n\n        const canEdit = computed(() => {\n            return hasAnyPermission(['ep-applications-manage', ['application-edit', group.value]])\n                && !props.readonly\n        })\n\n        onMounted(() => {\n            getGenes();\n        });\n\n        return {\n            group,\n            genes,\n            newGene,\n            orderedGenes,\n            errors,\n            loading,\n            updateGene,\n            updateCancel,\n            save,\n            debounceSave,\n            cancel,\n            edit,\n            remove,\n            cancelPendingRemove,\n            canEdit,\n            showConfirmRemove,\n            confirmRemove,\n            cancelRemove,\n            selectedGene,\n        }\n    }\n}\n</script>\n","import { render } from \"./VcepGeneList.vue?vue&type=template&id=9878aac0\"\nimport script from \"./VcepGeneList.vue?vue&type=script&lang=js\"\nexport * from \"./VcepGeneList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","class","href","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_input_row","errors","$data","utilize_gt","_component_checkbox","$options","expert_panel","disabled","$props","utilize_gci","curations_publicly_available","pub_policy_reviewed","_component_publication_policy_link","draft_manuscripts","recuration_process_review","_component_gcep_recuration_process_link","_component_training_materials_link","_hoisted_17","biocurator_training","gci_training_date","label","type","biocurator_mailing_list","name","props","Boolean","required","default","emits","data","gci_training","computed","group","get","this","$store","getters","set","value","commit","gciTrainingErrors","trainingErrors","dateErrors","gci_training_comp","watch","immediate","handler","to","methods","save","api","post","uuid","attributes","error","isValidationError","response","emitUpdate","$emit","checkCompleteness","gcep_attestation_date","Date","__exports__","render","_hoisted_10","isVcep","_component_vcep_protocol_link","is_gcep","_hoisted_5","vertical","id","is_vcep_or_scvcep","attestation","nhgri_attestation_date","checkboxLabel","is_vcep","is_validation_error","for","reanalysis_conflicting","_ctx","reanalysis_review_lp","reanalysis_review_lb","reanalysis_other","_Transition","_hoisted_7","_hoisted_8","otherCheckbox","checkedStandard","reanalysis_attestation_date","style","$setup","_createBlock","_component_edit_icon_button","onClick","genes","placeholder","components","editing","readonly","canEdit","hasAnyPermission","showForm","resetErrors","setup","context","store","useStore","loading","ref","genesAsText","formFactory","hideForm","emit","cancel","getGenes","syncGenesAsText","expertPanel","join","async","dispatch","map","g","gene_symbol","split","RegExp","filter","i","messages","forEach","m","pushError","geneMessages","Object","keys","key","geneIdx","parseInt","from","onMounted","_hoisted_3","mode","membership_description","_component_markdown_block","markdown","scope_description","_component_gcep_quick_guide_link","Group","scopeDescription","groupCopy","clone","GcepQuickGuideLink","colspan","_hoisted_12","_hoisted_4","_hoisted_6","length","_hoisted_9","_Fragment","gene","edit","hgnc_id","_component_gene_search_select","mondo_id","_component_disease_search_select","disease","disease_name","toDelete","_component_dropdown_menu","_component_dropdown_item","_hoisted_23","_component_modal_dialog","title","_component_button_row","onSubmitted","onCanceled","GeneSearchSelect","DiseaseSearchSelect","selectedGeneSymbol","selectedGene","selectedDiseaseName","showConfirmRemove","newGene","orderedGenes","sortedGenes","sort","a","b","clearNewGene","clearRemoveCountdown","removeTimeout","clearTimeout","clearInterval","removeInterval","removeCountdown","clearRemovalFlags","cancelPendingRemove","confirmRemove","remove","delete","cancelRemove","then","debounceSave","debounce","updateGene","put","updateCancel"],"sourceRoot":""}