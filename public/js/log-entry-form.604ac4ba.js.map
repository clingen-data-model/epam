{"version":3,"file":"js/log-entry-form.604ac4ba.js","mappings":"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","sources":["webpack://epam/./src/adapters/log_entry_repository.js","webpack://epam/./src/components/log_entries/LogEntryForm.vue","webpack://epam/./src/components/log_entries/LogEntryForm.vue?1fb0"],"sourcesContent":["import {ref, computed} from 'vue';\nimport api from '@/http/api'\n\nconst _entries = ref([]);\n\nexport const logEntries = computed(() => {\n    return _entries.value;\n});\n\nexport const fetchEntries = async (apiUrl) => {\n    _entries.value = await api.get(apiUrl)\n        .then(response => response.data.data);\n}\n\nexport const saveEntry = async (apiUrl, entryData) => {\n    return await api.post(apiUrl, entryData)\n        .then(response => {\n            _entries.value.push(response.data);\n            return response.data\n        });\n}\n\nexport const updateEntry = async (apiUrl, entryData) => {\n    return await api.put(apiUrl, entryData)\n        .then(response => {\n            const entryIdx = _entries.value.findIndex(entry => entry.id == response.data.id);\n            _entries.value[entryIdx] = response.data;\n            return response.data\n        });\n}\n\nexport const deleteEntry = async (apiUrl, entryId) => {\n    return await api.delete(`${apiUrl}/${entryId}`)\n        .then(response => {\n            const entryIdx = _entries.value.findIndex(entry => entry.id == entryId);\n            _entries.value.splice(entryIdx, 1);\n\n            return response;\n        });\n}\n","<template>\n    <form-container class=\"log-entry-form\" ref=\"form-container\">\n        <input-row label=\"Log Date\" v-model=\"newEntry.log_date\" :errors=\"errors.log_date\" type=\"date\" ref=\"logdate\"></input-row>\n        <step-input v-model=\"newEntry.step\" v-if=\"application.expert_panel_type_id == 2\" :errors=\"errors.step\"/>\n        <input-row label=\"Entry\" :errors=\"errors.entry\">\n            <rich-text-editor v-model=\"newEntry.entry\"></rich-text-editor>\n        </input-row>\n        <button-row>\n            <button class=\"btn\" @click=\"cancel\">Cancel</button>\n            <button class=\"btn blue\" @click=\"save\">Save</button>\n        </button-row>\n    </form-container>\n</template>\n<script>\nimport {mapGetters} from 'vuex'\nimport { formatDate } from '@/date_utils'\nimport StepInput from '@/components/forms/StepInput.vue'\nimport RichTextEditor from '@/components/forms/RichTextEditor.vue'\nimport {logEntries, saveEntry, updateEntry} from '@/adapters/log_entry_repository'\n\nexport default {\n    name: 'LogEntryForm',\n    components: {\n        StepInput,\n        RichTextEditor\n    },\n    props: {\n        id: {\n            required: false,\n            default: null\n        }\n    },\n    data() {\n        return {\n            newEntry: {\n                log_date: new Date(),\n                step: null,\n                entry: ''\n            },\n            errors: {},\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        }\n    },\n    watch: {\n        id: {\n            immediate: true,\n            handler: function() {\n                const entry = this.findEntry();\n                if (entry) {\n                    this.syncEntry(entry)\n                }\n            }\n        },\n        application: {\n            immediate: true,\n            handler: function () {\n                const entry = this.findEntry();\n                if (entry) {\n                    this.syncEntry(entry);\n                }\n            }\n        }\n    },\n    methods: {\n        findEntry () {\n            if (this.id === null) {\n                return null;\n            }\n            if (this.logEntries) {\n                return this.logEntries.find(i => i.id == this.id);\n            }\n        },\n        initNewEntry () {\n            this.newEntry = {\n                log_date: formatDate(new Date),\n                step: null,\n                entry: ''\n            }\n        },\n        syncEntry (entry) {\n            if (!entry) {\n                return;\n            }\n            this.newEntry = {\n                id: entry.id,\n                log_date: formatDate(new Date(Date.parse((entry.created_at)))),\n                step: parseInt(entry.step),\n                entry: entry.description\n            }\n        },\n        cancel() {\n            this.initNewEntry();\n            this.$emit('canceled');\n        },\n        async save() {\n            try {\n                if (this.newEntry.id) {\n                    updateEntry(`/api/groups/${this.group.uuid}/activity-logs/${this.newEntry.id}`, this.newEntry);\n                } else {\n                    saveEntry(`/api/groups/${this.group.uuid}/activity-logs`, this.newEntry)\n                }\n                this.initNewEntry();\n                this.$emit('saved');\n            } catch (error) {\n                if (error.response && error.response.status == 422 && error.response.data.errors) {\n                    this.errors = error.response.data.errors\n                    return;\n                }\n            }\n        },\n    },\n    mounted() {\n        this.$el.querySelectorAll('input')[0].focus();\n    },\n    setup () {\n        return {\n            logEntries\n        }\n    }\n}\n</script>","import { render } from \"./LogEntryForm.vue?vue&type=template&id=5ac45520\"\nimport script from \"./LogEntryForm.vue?vue&type=script&lang=js\"\nexport * from \"./LogEntryForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_entries","ref","logEntries","computed","value","fetchEntries","async","api","get","apiUrl","then","response","data","saveEntry","entryData","post","push","updateEntry","put","entryIdx","findIndex","entry","id","deleteEntry","entryId","delete","splice","_createBlock","_component_form_container","class","_createVNode","_component_input_row","label","$data","log_date","errors","type","$options","expert_panel_type_id","_component_step_input","step","_component_rich_text_editor","_component_button_row","_createElementVNode","onClick","name","components","StepInput","RichTextEditor","props","required","default","newEntry","Date","mapGetters","group","application","this","expert_panel","watch","immediate","handler","findEntry","syncEntry","methods","find","i","initNewEntry","formatDate","parse","created_at","parseInt","description","cancel","$emit","save","uuid","error","status","mounted","$el","querySelectorAll","focus","setup","__exports__","render"],"sourceRoot":""}