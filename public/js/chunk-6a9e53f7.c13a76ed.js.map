{"version":3,"sources":["webpack:///./src/components/groups/AnnualUpdateAlert.vue","webpack:///./src/components/groups/AnnualUpdateAlert.vue?6eef","webpack:///./src/views/Dashboard.vue","webpack:///./src/views/Dashboard.vue?1521"],"names":["class","$options","$data","id","_createBlock","_component_static_alert","variant","_createElementVNode","_createVNode","_component_icon_review","height","width","$props","_createElementBlock","_hoisted_2","_toDisplayString","displayName","_hoisted_4","for_year","_ctx","end","uuid","_component_router_link","to","name","params","props","group","type","Object","required","showGroupName","Boolean","default","data","annualReview","loading","computed","window","this","isPending","completed_at","now","Date","endDate","parse","addDays","watch","immediate","handler","getAnnualUpdate","methods","expert_panel","definition_is_approved","api","get","headers","then","response","__exports__","render","$setup","person","_TransitionGroup","tag","_Fragment","_renderList","notification","_component_notification_item","key","onRemoved","task","_component_sustained_curation_review_alert","assignee","_component_annual_update_alert","show-group-name","membershipsWithPendingCois","membership","_component_coi_alert","_component_tabs_container","_component_tab_item","label","length","_component_data_table","fields","sort","$event","onRowClick","row-class","cell-status_name","_withCtx","value","_component_badge","color","cell-displayName","item","toUpperCase","_component_person_profile","_component_coi_list","components","CoiList","NotificationItem","PersonProfile","AnnualUpdateAlert","testInst","setup","store","useStore","router","useRouter","user","getters","personFromStore","Person","loadPersonInStore","commit","onMounted","loadingNotifications","ref","notifications","getNotifications","removeNotification","index","findIndex","splice","groups","memberships","map","m","filter","g","Group","coordinatingGroups","hasPermission","groupFields","sortable","String","resolveValue","status","configs","statuses","currentStepName","groupSort","field","desc","groupBadgeColor","Active","Applying","Retired","Removed","sustainedCurationReviews","getSustainedCurationReviewTasks","with","where","task_type_id","assignee_type","assignee_id","Set","cg","pending","queryString","queryStringFromParams","url","uniqueTasks","forEach","dispatch","navigateToGroup","push"],"mappings":"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","file":"js/chunk-6a9e53f7.c13a76ed.js","sourcesContent":["<template>\n    <static-alert :variant=\"variant\"  v-if=\"isPending && annualReview.id\">\n        <div class=\"flex space-x-2 items-center mb-3\">\n            <icon-review height=\"30\" width=\"30\"></icon-review>\n            <div>\n                <p>\n                    <span v-if=\"showGroupName\"><strong>{{group.displayName}}</strong> has</span>\n                    <span v-else>You have</span>\n                    an <strong>annual update for {{window.for_year}}</strong> due on <strong>{{formatDate(window.end)}}</strong>.\n                </p>\n                <router-link \n                    class=\"btn font-bold\" \n                    :to=\"{name: 'AnnualUpdate', params: {uuid: group.uuid}}\"\n                    v-if=\"group.uuid\"\n                >\n                    Complete the Annual Update\n                </router-link>\n            </div>\n        </div>\n    </static-alert>\n</template>\n<script>\nimport { api } from '@/http';\nexport default {\n    name: 'AnnualUpdateAlert',\n    props: {\n        group: {\n            type: Object,\n            required: true,\n        },\n        showGroupName: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            annualReview: {},\n            loading: false\n        }\n    },\n    computed: {\n        window () {\n            return this.annualReview.window ? this.annualReview.window : {}\n        },\n\n        isPending() {\n            return !(this.annualReview.completed_at)\n        },\n        \n        variant () {\n            const now = new Date();\n            if (!this.window.end) {\n                return 'warning';\n            }\n            const endDate = new Date(Date.parse(this.window.end));\n\n            return now > this.addDays(endDate, -7) ? 'danger' : 'warning';\n        }\n    },\n    watch: {\n        group: {\n            immediate: true,\n            handler () {\n                this.getAnnualUpdate();\n            }\n        }\n    },\n    methods: {\n        getAnnualUpdate () {\n            if (!this.group.uuid) {\n                return;\n            }\n\n            if (!this.group.expert_panel.definition_is_approved) {\n                return;\n            }\n\n            this.loading = true;\n            api.get(`/api/groups/${this.group.uuid}/expert-panel/annual-updates`, {headers: {'X-Ignore-Missing': 1} })\n                .then(response => {\n                    this.annualReview = response.data\n                });\n            this.loading = false;\n        }\n    }\n}\n</script>","import { render } from \"./AnnualUpdateAlert.vue?vue&type=template&id=b7e9789a\"\nimport script from \"./AnnualUpdateAlert.vue?vue&type=script&lang=js\"\nexport * from \"./AnnualUpdateAlert.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <h1>\n            Dashboard\n            <div class=\"note font-normal\">\n                User ID: {{user.id}}\n                |\n                Person ID: {{user.person ? user.person.id : 'no person!!'}}\n            </div>\n        </h1>\n        <transition-group tag=\"div\" name=\"slide-fade-down\">\n            <notification-item \n                v-for=\"notification in notifications\" :key=\"notification.id\"\n                :notification=\"notification\"\n                class=\"mb-2\"\n                @removed=\"removeNotification(notification)\"\n            ></notification-item>\n        </transition-group>\n\n        <sustained-curation-review-alert\n            v-for=\"task in sustainedCurationReviews\" \n            :key=\"task.id\"\n            :group=\"task.assignee\"\n            class=\"mb-2\"\n        />\n\n        <annual-update-alert \n            v-for=\"group in coordinatingGroups\" :key=\"group.id\" \n            :group=\"group\"\n            :show-group-name=\"true\"\n            class=\"mb-2\"\n        />\n\n        <coi-alert\n            v-for=\"membership in user.person.membershipsWithPendingCois\" \n            :key=\"membership.id\"\n            :membership=\"membership\"\n            class=\"mb-2\"\n        />\n\n        <tabs-container class=\"mt-8\">\n            <tab-item label=\"Your Groups\">\n                <div class=\"well\" v-if=\"!groups.length\">You are not assigned to any groups.</div>\n                <data-table\n                    v-else\n                    :data=\"groups\"\n                    :fields=\"groupFields\"\n                    v-model:sort=\"groupSort\"\n                    @rowClick=\"navigateToGroup\"\n                    row-class=\"cursor-pointer\"\n                >\n                    <template v-slot:cell-status_name=\"{value}\">\n                        <badge :color=\"groupBadgeColor(value)\">{{value}}</badge>\n                    </template>\n                    <template v-slot:cell-displayName=\"{item}\">\n                        {{item.name}} {{item.type.name.toUpperCase()}}\n                    </template>\n                </data-table>\n            </tab-item>\n\n            <tab-item label=\"Your Info\">\n                <person-profile :person=\"personFromStore\"></person-profile>\n            </tab-item>\n\n            <tab-item label=\"COIs\">\n                <coi-list :person=\"user.person\"></coi-list>\n            </tab-item>\n\n        </tabs-container>\n    </div>\n</template>\n<script>\nimport {useStore} from 'vuex'\nimport {useRouter} from 'vue-router'\nimport {ref, computed, onMounted, watch} from 'vue'\nimport {api, queryStringFromParams} from '@/http'\nimport AnnualUpdateAlert from '@/components/groups/AnnualUpdateAlert';\nimport NotificationItem from '@/components/NotificationItem'\nimport CoiList from '@/components/people/CoiList'\nimport PersonProfile from '@/components/people/PersonProfile'\nimport Person from \"@/domain/person\"\nimport Group from \"@/domain/group\"\nimport configs from '@/configs'\n\nexport default {\n    name: 'Dashboard',\n    components: {\n        CoiList,\n        NotificationItem,\n        PersonProfile,\n        AnnualUpdateAlert\n    },\n    data() {\n        return {\n            testInst: null\n        }\n    },\n    props: {\n        \n    },\n    setup () {\n        const store = useStore();\n        const router = useRouter();\n        const user = computed(() => {\n            return store.getters['currentUser']\n        });\n        const personFromStore = computed(() => {\n            return store.getters['people/currentItem'] || new Person();\n        })\n        const loadPersonInStore = () => {\n            if (user.value.id && user.value.person && user.value.person.id) {\n                store.commit('people/addItem', user.value.person);\n                store.commit('people/setCurrentItemIndex', user.value.person);\n            }\n        }\n        watch(() => user, () => {\n            loadPersonInStore();\n        });\n        onMounted(() => {\n            loadPersonInStore();\n        });\n\n        // NOTIFICATIONS\n        // TODO: Extract to modules\n        const loadingNotifications = ref(false);\n        const notifications = ref([]);\n        const getNotifications = async () => {\n            loadingNotifications.value = true;\n            if (user.value.person && user.value.person.uuid) {\n                notifications.value = await api.get(`/api/people/${user.value.person.uuid}/notifications/unread`)\n                                .then(response => response.data)\n            }\n            loadingNotifications.value = false;\n        }\n        const removeNotification = (notification) => {\n            const index = notifications.value.findIndex((item) => item.id == notification.id);\n            if (index > -1) {\n                notifications.value.splice(index, 1);\n            }\n        }\n\n\n        // GROUPS\n        // TODO: Get groups by search with TONS of info.\n        // TODO: Extract that work to a module.\n        const groups = computed(() => {\n            return user.value.memberships\n                    .map(m => m.group)\n                    .filter(g => g !== null)\n                    .map(group => new Group(group))\n        });\n\n        const coordinatingGroups = computed(() => {\n            return user.value.memberships\n                    .filter(m => m.hasPermission('annual-update-manage'))\n                    .map(m => m.group)\n                    .filter(g => g !== null)\n                    .map(group => new Group(group))\n        });\n\n        const groupFields = ref([\n            {\n                name: 'displayName',\n                sortable: true,\n                type: String\n            },\n            {\n                name: 'status.name',\n                label: 'Status',\n                sortable: true,\n                resolveValue: (item) => {\n                    if (item.status.id == configs.groups.statuses['applying'].id) {\n                        return item.status.name+' - '+item.expert_panel.currentStepName;\n                    }\n                    return item.status.name;\n                },\n                type: String\n            },\n        ]);\n        const groupSort = ref({\n            field: 'displayName',\n            desc: false\n        });\n        const groupBadgeColor = (status) => {\n            const map = {\n                Active: 'green',\n                Applying: 'blue',\n                Retired: 'yellow',\n                Removed: 'red'\n            }\n            return map[status] || 'blue'\n        };\n\n        const sustainedCurationReviews = ref([]);\n        const getSustainedCurationReviewTasks = async () => {\n            const params = {\n                with: ['assignee'],\n                where: {\n                    task_type_id: 1,\n                    assignee_type: 'App\\\\Modules\\\\Group\\\\Models\\\\Group',\n                    assignee_id: [...(new Set(coordinatingGroups.value.map(cg => cg.id)))],\n                    pending: 1\n                }\n            }\n            const queryString = queryStringFromParams(params);\n            const url = `/api/tasks${queryString}`;\n            sustainedCurationReviews.value = await api.get(url)\n                                                .then(response => {\n                                                    const uniqueTasks = {};\n                                                    response.data.forEach(task => {\n                                                        uniqueTasks[task.assignee_id] = task;\n                                                    })\n                                                    return uniqueTasks;\n                                                });\n        }\n\n        // TODO: extract to module.\n        // TODO: Get coi data on demand\n\n        onMounted(async () => {\n            getNotifications();\n            await store.dispatch('forceGetCurrentUser');\n            await getSustainedCurationReviewTasks();\n        })\n\n        return {\n            user,\n            sustainedCurationReviews,\n            personFromStore,\n            loadingNotifications,\n            notifications,\n            groups,\n            coordinatingGroups,\n            groupSort,\n            groupFields,\n            groupBadgeColor,\n            getNotifications,\n            removeNotification,\n            navigateToGroup: (item) => {\n                router.push({\n                    name: 'GroupDetail',\n                    params: {uuid: item.uuid}\n                })\n            }\n        }\n        \n    }\n}\n</script>","import { render } from \"./Dashboard.vue?vue&type=template&id=22b66d17\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}