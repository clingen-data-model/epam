{"version":3,"sources":["webpack:///./src/views/Coi.vue","webpack:///./src/survey.js","webpack:///./src/views/Coi.vue?676e"],"names":["class","_createElementBlock","_createElementVNode","_toDisplayString","_ctx","$options","_createBlock","_component_card","title","$data","_hoisted_1","_createVNode","_component_coi_policy_link","_Fragment","_renderList","questions","question","key","name","_Transition","_component_input_row","label","question_text","errors","vertical","type","$event","_hoisted_6","options","option","value","_component_button_row","show-cancel","onSubmitClicked","_renderSlot","_component_note","Question","this","validationRules","validation","show","YesNoQuestion","makeQuestion","questionDef","Survey","surveyDefinition","_name","_questions","map","q","response","rsp","forEach","survey","coiDef","props","code","required","String","data","getResponseTemplate","epName","verifying","saved","saving","redirectCountdown","computed","codeIsValid","coiTitle","membership","$store","getters","currentUser","person","memberships","find","m","group","expert_panel","coi_code","groupMemberId","id","watch","immediate","handler","initResponseValues","methods","cois","length","showQuestion","Array","isArray","indexOf","verifyCode","api","get","then","display_name","storeResponse","dispatch","coiData","$router","push","is_validation_error","commit","mounted","__exports__","render"],"mappings":"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","file":"js/chunk-ce03ae04.508d232f.js","sourcesContent":["<template>\n    <div>\n        <pre>{{lastCoiResponse}}</pre>\n        <card :title=\"verifying ? `Loading COI Form` : `COI Form not found`\" v-if=\"!codeIsValid\">\n            <div v-if=\"!verifying\">We couldn't find this COI.</div>\n        </card>\n        <card title=\"There's a problem\" v-if=\"!groupMemberId\">\n            We can't seem to find your membership id.  Please try refreshing.\n        </card>\n        <card :title=\"coiTitle\"  class=\"max-w-xl mx-auto relative\" v-if=\"codeIsValid\">\n            <p>\n                Review ClinGenâ€™s <coi-policy-link />\n            </p>\n            <div class=\"relative\">\n                <div \n                    v-for=\"question in survey.questions\"\n                    :key=\"question.name\"\n                            :class=\"question.class\"\n                >\n                    <transition name=\"slide-fade-down\">\n                        <input-row\n                            :label=\"question.question_text\"\n                            :errors=\"errors[question.name]\"\n                            :vertical=\"true\"\n                            v-show=\"showQuestion(question)\"\n                        >\n                        \n                            <textarea  v-if=\"question.type == 'text'\"\n                                class=\"w-full h-24\"\n                                v-model=\"response[question.name]\"\n                                :name=\"question.name\"\n                            ></textarea>\n\n                            <div v-if=\"question.type == 'multiple-choice'\">\n                                <label v-for=\"option in question.options\" :key=\"option.value\" class=\"mb-1\">\n                                    <input type=\"radio\" \n                                        :value=\"option.value\" \n                                        :name=\"question.name\"\n                                        v-model=\"response[question.name]\"\n                                    >\n                                    <div>{{option.label}}</div>\n                                </label>\n                            </div>\n\n                            <input \n                                type=\"text\" \n                                v-if=\"question.type == 'string'\"\n                                v-model=\"response[question.name]\"\n                                :name=\"question.name\"\n                            >\n                        </input-row>\n                    </transition>\n                </div>\n                <button-row :show-cancel=\"false\" @submitClicked=\"storeResponse()\">\n                    <slot v-if=\"saving\">\n                        Saving...\n                    </slot>\n                </button-row>\n            </div>\n        </card>\n        <note class=\"container\">GroupMemberId: {{groupMemberId}}</note>\n    </div>\n</template>\n<script>\nimport coiDef from '../../../surveys/coi.json'\nimport Survey from '@/survey'\nimport api from '@/http/api'\nimport is_validation_error from '@/http/is_validation_error';\n\nconst survey = new Survey(coiDef);\n\nexport default {\n    props: {\n        code: {\n            required: true,\n            type: String\n        }\n    },\n    data() {\n        return {\n            coiDef: coiDef,\n            survey: survey,\n            response: survey.getResponseTemplate(),\n            errors: {},\n            epName: null,\n            verifying: false,\n            saved: false,\n            saving: false,\n            redirectCountdown: 5\n        }\n    },\n    computed: {\n        codeIsValid() {\n            return this.epName !== null;\n        },\n        coiTitle() {\n            return survey.name+' for '+this.epName;\n        },\n        membership () {\n            return this.$store.getters\n                    .currentUser\n                    .person.memberships.find(m => {\n                        return m.group.expert_panel\n                            && m.group.expert_panel.coi_code === this.code\n                    });\n        },\n        groupMemberId() {\n            if (this.membership) {\n                return this.membership.id;\n            }\n\n            return null;\n        },\n    },\n    watch: {\n        code: {\n            immediate: true,\n            handler () {\n                this.initResponseValues()\n            }\n        }\n    },\n    methods: {\n        initResponseValues() {\n            if (this.membership && this.membership.cois.length > 0) {\n                this.response = {...this.membership.cois[this.membership.cois.length -1].data};\n            }\n\n            return {}\n        },\n\n        showQuestion(question) {\n            if (!question.show) {\n                return true;\n            }\n            if (Array.isArray(question.show.value)) {\n                return question.show.value.indexOf(this.response[question.show.name]) > -1;\n            }\n            return (this.response[question.show.name] == question.show.value);\n        },\n        verifyCode() {\n            this.verifying = true;\n            api.get(`/api/coi/${this.code}/application`)\n                .then(response => {\n                    this.epName = response.data.display_name\n                })\n                .then(() => {\n                    this.verifying = false;\n                })\n        },\n        async storeResponse() {\n            this.saving = true;\n            try {\n                await this.$store.dispatch(\n                    'storeCoi', \n                    {\n                        code: this.code, \n                        groupMemberId: this.groupMemberId,\n                        coiData: this.response, \n                    }\n                );\n                this.saved = true;\n                this.$store.dispatch('forceGetCurrentUser');\n                this.$router.push({name: 'Dashboard'});\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    this.errors = error.response.data.errors\n                } else {\n                    this.$store.commit('pushError', `You can not complete a COI for ${this.epName} because you are not a member.`)\n                }\n            }\n            this.saving = false;\n        },\n    },\n    async mounted() {\n        this.verifyCode();\n        await this.$store.dispatch('getCurrentUser')\n    }\n}\n</script>","class Question {\n    constructor(question) {\n        this.question_text = question.question;\n        this.name = question.name;\n        this.options = question.options;\n        this.validationRules = question.validation;\n        this.type = question.type;\n        this.show = question.show;\n        this.class = question.class;\n    }\n}\n\nclass YesNoQuestion extends Question {\n    constructor(question) {\n        super(question)\n        this.type = 'multiple-choice';\n        this.options = [{\n                label: 'Yes',\n                value: 1\n            },\n            {\n                label: 'No',\n                value: 0\n            }\n        ];\n    }\n\n\n}\n\nfunction makeQuestion(questionDef) {\n    if (questionDef.type == 'yes-no') {\n        return new YesNoQuestion(questionDef);\n    }\n\n    return new Question(questionDef);\n}\n\nclass Survey {\n    constructor(surveyDefinition) {\n        this._name = surveyDefinition.name;\n        this._questions = surveyDefinition.questions.map(q => makeQuestion(q));\n\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get questions() {\n        return this._questions\n    }\n\n    responseIsValid(response) {\n        response;\n        return true;\n    }\n\n    getResponseTemplate() {\n        const rsp = {};\n        this.questions.forEach(q => {\n            rsp[q.name] = null\n        });\n        return rsp;\n\n    }\n}\n\nexport default Survey","import { render } from \"./Coi.vue?vue&type=template&id=c482bc1a\"\nimport script from \"./Coi.vue?vue&type=script&lang=js\"\nexport * from \"./Coi.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/new-epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}