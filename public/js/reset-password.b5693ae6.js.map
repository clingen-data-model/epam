{"version":3,"sources":["webpack:///./src/http/is_validation_error.js","webpack:///./src/views/ResetPassword.vue","webpack:///./src/views/ResetPassword.vue?15a1"],"names":["error","response","status","data","errors","class","title","successMessage","email","type","label","hasToken","password","password_confirmation","show-cancel","submit-text","submitReset","props","computed","Boolean","this","$route","query","token","methods","getResetLink","api","post","then","catch","is_validation_error","submitNewPassword","$store","dispatch","$router","replace","render"],"mappings":"kHAAe,gBAAUA,GACrB,OAAOA,EAAMC,UAAqC,KAAzBD,EAAMC,SAASC,QAAiBF,EAAMC,SAASE,KAAKC,S,oECCpEC,MAAM,mE,yMADf,yBAUO,GAVDC,MAAM,sBAAsBD,MAAM,iB,+BACpC,iBAEM,CAF6E,EAAAE,gB,yBAAnF,yBAEM,MAFN,EAEM,6BADA,EAAAA,gBAAc,K,yBAEpB,yBAKM,SAJF,yBAAwF,G,WAApE,EAAAC,M,qDAAA,EAAAA,MAAK,IAAEC,KAAK,OAAOC,MAAM,QAASN,OAAQ,EAAAA,OAAOI,O,gCAC8B,EAAAG,U,yBAAnG,yBAAyH,G,iBAArG,EAAAC,S,qDAAA,EAAAA,SAAQ,IAAEH,KAAK,WAAWC,MAAM,eAAgBN,OAAQ,EAAAA,OAAOQ,U,wEAC8C,EAAAD,U,yBAAjI,yBAAuJ,G,iBAAnI,EAAAE,sB,qDAAA,EAAAA,sBAAqB,IAAEJ,KAAK,WAAWC,MAAM,mBAAoBN,OAAQ,EAAAA,OAAOS,uB,wEACpG,yBAAkH,GAArGC,eAAa,EAAOC,cAAY,2BAA4B,gBAAe,EAAAC,a,yFAOrF,GACXC,MAAO,GAGPd,KAJW,WAKP,MAAO,CACHK,MAAO,KACPJ,OAAQ,GACRQ,SAAU,KACVC,sBAAuB,KACvBN,eAAgB,OAGxBW,SAAU,CACNP,SADM,WAEF,OAAOQ,QAAQC,KAAKC,OAAOC,MAAMC,SAGzCC,QAAS,CACLC,aADK,WACU,WACXC,EAAA,KAAIC,KAAK,gCAAiC,CAACnB,MAAOY,KAAKZ,QAClDoB,MAAK,SAAA3B,GACF,EAAKM,eAAiBN,EAASE,KAAKD,UAEvC2B,OAAM,SAAA7B,GACC,OAAA8B,EAAA,MAAoB9B,KACpB,EAAKI,OAASJ,EAAMC,SAASE,KAAKC,YAIlD2B,kBAZK,WAYgB,WACX5B,EAAO,CACToB,MAAOH,KAAKC,OAAOC,MAAMC,MACzBf,MAAOY,KAAKZ,MACZI,SAAUQ,KAAKR,SACfC,sBAAuBO,KAAKP,uBAGhCa,EAAA,KAAIC,KAAK,sBAAuBxB,GAC3ByB,MAAK,WACF,EAAKI,OAAOC,SAAS,QAAS,CAACzB,MAAO,EAAKA,MAAOI,SAAU,EAAKA,WAC5DgB,MAAK,WACF,EAAKI,OAAOC,SAAS,kBACrB,EAAKC,QAAQC,QAAQ,WAGhCN,OAAM,SAAA7B,GACC,OAAA8B,EAAA,MAAoB9B,KACpB,EAAKI,OAASJ,EAAMC,SAASE,KAAKC,YAIlDY,YAlCK,WAmCGI,KAAKT,SACLS,KAAKW,oBAITX,KAAKK,kBCvEjB,EAAOW,OAASA,EAED","file":"js/reset-password.b5693ae6.js","sourcesContent":["export default function (error) {\n    return error.response && error.response.status == 422 && error.response.data.errors\n}","<template>\n    <card title=\"Reset Your Password\" class=\"w-2/3 mx-auto\">\n        <div class=\"p-2 rounded border border-green-300 bg-green-100 text-green-700\" v-if=\"successMessage\">\n            {{successMessage}}\n        </div>\n        <div v-else>\n            <input-row v-model=\"email\" type=\"text\" label=\"Email\" :errors=\"errors.email\"></input-row>\n            <input-row v-model=\"password\" type=\"password\" label=\"New password\" :errors=\"errors.password\" v-if=\"hasToken\"></input-row>\n            <input-row v-model=\"password_confirmation\" type=\"password\" label=\"Confirm password\" :errors=\"errors.password_confirmation\" v-if=\"hasToken\"></input-row>\n            <button-row :show-cancel=\"false\" submit-text=\"Send Password Reset Link\" @submitClicked=\"submitReset\"></button-row>\n        </div>\n    </card>\n</template>\n<script>\nimport api from '../http/api'\nimport is_validation_error from '../http/is_validation_error'\nexport default {\n    props: {\n        \n    },\n    data() {\n        return {\n            email: null,\n            errors: {},\n            password: null,\n            password_confirmation: null,\n            successMessage: null\n        }\n    },\n    computed: {\n        hasToken () {\n            return Boolean(this.$route.query.token)\n        }\n    },\n    methods: {\n        getResetLink() {\n            api.post('/api/send-reset-password-link', {email: this.email})\n                .then(response => {\n                    this.successMessage = response.data.status;\n                })\n                .catch(error => {\n                    if (is_validation_error(error)) {\n                        this.errors = error.response.data.errors\n                    }\n                });\n        },\n        submitNewPassword () {\n            const data = {\n                token: this.$route.query.token,\n                email: this.email,\n                password: this.password,\n                password_confirmation: this.password_confirmation,\n            };\n\n            api.post('/api/reset-password', data)\n                .then(() => {\n                    this.$store.dispatch('login', {email: this.email, password: this.password})\n                        .then(() => {\n                            this.$store.dispatch('getCurrentUser');\n                            this.$router.replace('/');\n                        })\n                })\n                .catch(error => {\n                    if (is_validation_error(error)) {\n                        this.errors = error.response.data.errors\n                    }\n                })\n        },\n        submitReset() {\n            if (this.hasToken) {\n                this.submitNewPassword()\n                return;\n            }\n\n            this.getResetLink();\n        }\n    }\n}\n</script>","import { render } from \"./ResetPassword.vue?vue&type=template&id=7cf8b14e\"\nimport script from \"./ResetPassword.vue?vue&type=script&lang=js\"\nexport * from \"./ResetPassword.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}