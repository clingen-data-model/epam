{"version":3,"sources":["webpack:///./src/components/expert_panels/GcepGeneList.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/components/expert_panels/GcepGeneList.vue?edbe","webpack:///./src/components/expert_panels/AttestationNhgri.vue","webpack:///./src/components/expert_panels/AttestationNhgri.vue?aaa8","webpack:///./src/components/expert_panels/MembershipDescriptionForm.vue","webpack:///./src/components/expert_panels/MembershipDescriptionForm.vue?6697","webpack:///./src/components/expert_panels/VcepGeneList.vue","webpack:///./src/components/expert_panels/VcepGeneList.vue?878e","webpack:///./src/components/expert_panels/AttestationGcep.vue","webpack:///./src/components/expert_panels/AttestationGcep.vue?3f84","webpack:///./src/components/expert_panels/AttestationReanalysis.vue","webpack:///./src/components/expert_panels/AttestationReanalysis.vue?fd65","webpack:///./src/components/expert_panels/ScopeDescriptionForm.vue","webpack:///./src/components/expert_panels/ScopeDescriptionForm.vue?31a4"],"names":["class","style","_createElementBlock","_createElementVNode","_ctx","$setup","$props","_createBlock","_component_edit_icon_button","onClick","$options","_hoisted_3","_createVNode","_component_input_row","$event","type","label","errors","genes","placeholder","vertical","_hoisted_4","_toDisplayString","_iterableToArrayLimit","arr","i","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","name","components","props","editing","Boolean","required","default","readonly","computed","canEdit","this","hasAnyPermission","group","emits","methods","showForm","resetErrors","$emit","setup","context","store","useStore","loading","ref","genesAsText","formFactory","get","getters","set","commit","hideForm","emit","cancel","getGenes","syncGenesAsText","expert_panel","expertPanel","join","uuid","dispatch","map","g","gene_symbol","response","data","save","split","RegExp","filter","api","post","is_validation_error","messages","forEach","m","pushError","geneMessages","Object","keys","key","geneIdx","parseInt","watch","to","from","id","onMounted","__exports__","render","_hoisted_10","isVcep","_hoisted_1","_component_vcep_protocol_link","isGcep","_component_checkbox","disabled","_hoisted_6","_component_publication_policy_link","_hoisted_9","_hoisted_11","$store","attestation","nhgri_attestation_date","Date","checkboxLabel","_hoisted_2","_Transition","mode","membership_description","_component_markdown_block","markdown","emitUpdate","colspan","_hoisted_12","_hoisted_5","_hoisted_7","_hoisted_13","_hoisted_14","_Fragment","_renderList","gene","edit","hgnc_id","_component_gene_search_select","mondo_id","_component_disease_search_select","disease","_hoisted_20","_hoisted_21","disease_name","_hoisted_15","_hoisted_16","toDelete","_component_dropdown_menu","hide-cheveron","_hoisted_17","_component_dropdown_item","_hoisted_22","_component_modal_dialog","title","_component_button_row","submit-text","cancel-text","onSubmitted","onCanceled","GeneSearchSelect","DiseaseSearchSelect","selectedGeneSymbol","selectedGene","selectedDiseaseName","showConfirmRemove","newGene","orderedGenes","sortedGenes","sort","a","b","clearNewGene","clearRemoveCountdown","removeTimeout","clearTimeout","clearInterval","removeInterval","removeCountdown","clearRemovalFlags","cancelPendingRemove","confirmRemove","remove","delete","cancelRemove","then","console","log","debounceSave","debounce","updateGene","put","updateCancel","href","$data","utilize_gt","hide-label","utilize_gci","curations_publicly_available","pub_policy_reviewed","draft_manuscripts","recuration_process_review","_component_gcep_recuration_process_link","_component_training_materials_link","biocurator_training","gci_training_date","biocurator_mailing_list","gci_training","gciTrainingErrors","trainingErrors","dateErrors","gci_training_comp","immediate","handler","attributes","isValidationError","checkCompleteness","gcep_attestation_date","for","reanalysis_conflicting","reanalysis_review_lp","reanalysis_review_lb","reanalysis_other","_hoisted_8","otherCheckbox","checkedStandard","reanalysis_attestation_date","scope_description","_component_gcep_quick_guide_link","Group","scopeDescription","groupCopy","clone","GcepQuickGuideLink"],"mappings":"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","file":"js/group-application~group-detail.46bc0073.js","sourcesContent":["<template>\n    <div>\n        <h4 class=\"flex justify-between mb-2\">\n            Gene List\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing && !readonly\"\n                @click=\"showForm\"\n            ></edit-icon-button>\n        </h4>\n        <div v-if=\"editing\">\n            <input-row \n                v-model=\"genesAsText\"\n                type=\"large-text\"\n                label=\"List the gene symbols for the genes the Expert Panel plans to curate.  Separate genes by commas, spaces, or new lines.\"\n                :errors=\"errors.genes\"\n                @update:modelValue=\"$emit('geneschanged'); $emit('update')\"\n                placeholder=\"ABC, DEF1, BEAN\"\n                vertical\n            />\n        </div>\n        <div v-else>\n            <p v-if=\"genesAsText\" style=\"text-indent: 1rem;\">{{genesAsText}}</p>\n            <div class=\"well cursor-pointer\" v-else @click=\"showForm\">\n                {{ loading ? `Loading...` : `No genes have been added to the gene list.`}}\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport {ref, watch, computed, onMounted} from 'vue';\nimport {useStore} from 'vuex';\nimport formFactory from '@/forms/form_factory'\nimport is_validation_error from '@/http/is_validation_error'\nimport api from '@/http/api'\n\nexport default {\n    name: 'GcepGeneList',\n    components: {\n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    computed: {\n        canEdit () {\n            return this.hasAnyPermission(['groups-manage', ['application-edit', this.group]]);\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n        'update:editing',\n        'geneschanged',\n        'update'\n    ],\n    methods: {\n        showForm () {\n            if (this.canEdit) {\n                this.resetErrors();\n                this.$emit('update:editing', true);\n            }\n        }\n\n    },\n    setup(props, context) {\n        const store = useStore();\n\n        const loading = ref(false);\n        const genesAsText = ref(null);\n\n        const {errors, resetErrors} = formFactory(props, context)\n\n        const group = computed({\n            get() {\n                return store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                store.commit('groups/addItem', value)\n            }\n        });\n\n        const hideForm = () => {\n            context.emit('update:editing', false);\n            errors.value = {};\n        }\n        const cancel = () => {\n            resetErrors();\n            getGenes();\n            hideForm();\n            context.emit('canceled');\n        }\n\n        const syncGenesAsText = () => {\n            if (!group.value.expert_panel) {\n                return;\n            }\n            genesAsText.value = group.value.expert_panel.genes\n                ? group.value.expertPanel.genes.join(', ')\n                : null\n        };\n        const getGenes = async () => {\n            if (!group.value.uuid) {\n                return;\n            }\n            loading.value = true;\n            try {\n                await store.dispatch('groups/getGenes', group.value);\n                genesAsText.value = group.value.expert_panel.genes.map(g => g.gene_symbol).join(\", \");\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n            loading.value = false;\n            \n        }\n        const save = async () => {\n            const genes = genesAsText.value \n                            ? genesAsText.value\n                                .split(new RegExp(/[, \\n]/))\n                                .filter(i => i !== '')\n                            : [];\n\n            try {\n                await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, {genes});\n                hideForm();\n                context.emit('saved')\n                getGenes();\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    const messages = error.response.data.errors\n                    if (messages.group) {\n                        messages.group\n                            .forEach(m => {\n                                store.pushError(m)\n                            })\n                    }\n                    const geneMessages = Object.keys(messages).map(key => {\n                        const [g, geneIdx] = key.split('.')\n                        if (g == 'genes') {\n                            if (geneIdx) {\n                                return `Gene #${(parseInt(geneIdx)+1)}, \"${genes[geneIdx]}\" wasn't found in our records.  Please confirm it is currently an approved HGNC gene symbol.`\n                            }\n                            return messages[key];\n                        }\n                    });\n                    errors.value = {\n                        genes: geneMessages\n                    }\n                }\n            }\n        };\n\n\n        watch(() => store.getters['groups/currentItem'], (to, from) => {\n            if (to.id && (!from || to.id != from.id)) {\n                // syncGenesAsText();\n                getGenes();\n            }\n        })\n\n        onMounted(() => {\n            getGenes();\n        })\n\n        watch(() => group.value.expert_panel.genes, () => {\n            // syncGenesAsText();\n        })\n\n        return {\n            group,\n            genesAsText,\n            loading,\n            errors,\n            resetErrors,\n            hideForm,\n            cancel,\n            syncGenesAsText,\n            save,\n        }\n    }\n}\n</script>","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { render } from \"./GcepGeneList.vue?vue&type=template&id=3c80bb1d\"\nimport script from \"./GcepGeneList.vue?vue&type=script&lang=js\"\nexport * from \"./GcepGeneList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <p v-if=\"group.isVcep()\">\n            Curated variants and genes are expected to be approved and posted for the community as soon as possible as described in Section 2.4 of the <vcep-protocol-link />. \n            Note that upon approval, a VCEP must finalize their set of variants for upload to the ClinGen Evidence Repository within 30 days.\n        </p>\n        <p v-if=\"group.isGcep()\">\n            Curated genes and variants are expected to be approved and posted for the community as soon as possible and should not wait for the publication of a manuscript.\n        </p>\n\n        <p class=\"my-4\">\n            <input-row label=\"\" :vertical=\"true\">\n                <checkbox \n                    :disabled=\"disabled\" \n                    v-model=\"attestation\" \n                    id=\"nhgri-checkbox\" \n                    :label=\"checkboxLabel\"\n                />\n            </input-row>\n        </p>\n\n        <p v-if=\"group.isVcep()\">\n            Please review the \n            <publication-policy-link />\n            and refer to guidance on submissions to a preprint server (e.g. bioRxiv or medRxiv).\n        </p>\n        <p v-if=\"group.isGcep()\">\n            <em>It is expected that, whenever possible, Expert Panel manuscripts will be pre-published (e.g. medRXiv) . If the authors do not anticipate submitting their manuscript to a prepublication resource they must provide a written justification.</em>\n        </p>\n    </div>\n</template>\n<script>\nimport api from '@/http/api';\nimport is_validation_error from '../../http/is_validation_error';\n\nexport default {\n    name: 'NHGRIDataAvailability',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {                \n                this.$store.commit('groups/addItem', value);\n            }\n        },\n        attestation: {\n            get () {\n                return Boolean(this.group.expert_panel.nhgri_attestation_date);\n            },\n            set (value) {\n                if (value) {\n                    this.group.expert_panel.nhgri_attestation_date = new Date();\n                } else {\n                    this.group.expert_panel.nhgri_attestation_date = null;\n                }\n                this.$emit('update');                \n            }\n        },\n        checkboxLabel () {\n            if (this.group.isVcep()) {\n                return \"I understand that once a variant is approved in the VCI it will become publicly available in the Evidence Repository. They should not be held for publication.\"\n            }\n\n            return \"Please check box to confirm your understanding that once a gene is approved in the GCI, the group should utilize the “publish” functionality within the GCI to make the curation publicly available on the ClinGen website (https://clinicalgenome.org/). They should not be held for publication.\"\n        }\n    },\n    methods: {\n        async save () {\n            if (this.attestation) {\n                try {\n                    await api.post(`/api/groups/${this.group.uuid}/application/attestations/nhgri`, {'attestation': this.attestation})\n                } catch (error) {\n                    if (is_validation_error(error)) {\n                        this.errors = error.response.data.errors\n                    }\n                }\n            }\n        }\n    }\n}\n</script>","import { render } from \"./AttestationNhgri.vue?vue&type=template&id=61f7b4c8\"\nimport script from \"./AttestationNhgri.vue?vue&type=script&lang=js\"\nexport * from \"./AttestationNhgri.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <header class=\"flex justify-between items-center\">\n            <h4>Description of Expertise</h4>\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage'], ['edit-info', group]) && !editing\"\n                @click=\"$emit('update:editing', true)\"\n            ></edit-icon-button>\n        </header>\n        <div class=\"mt-4\">\n            <transition name=\"fade\" mode=\"out-in\">\n                <input-row \n                    v-model=\"group.expert_panel.membership_description\"\n                    label=\"Describe the expertise of VCEP members who regularly use the ACMG/AMP guidelines to classify variants and/or review variants during clinical laboratory case sign-out.\" \n                    v-if=\"editing\" \n                    :errors=\"errors.membership_description\"\n                    type=\"large-text\"\n                    vertical\n                    @update:modelValue=\"emitUpdate\"\n                />\n                <div v-else>\n                    <markdown-block \n                        v-if=\"group.expert_panel.membership_description\" \n                        :markdown=\"group.expert_panel.membership_description\"\n                    />\n                    <p class=\"well\" v-else>\n                        A description of expertise has not yet been provided.\n                    </p>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'MembershipDescriptionForm',\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({})\n        }\n    },\n    emits: [\n        'update:editing',\n        'saved',\n        'canceled',\n        'update'\n    ],\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value);\n            }\n        }\n    },\n    methods: {\n        emitUpdate () {\n            this.$emit('update');\n        }\n    }\n}\n</script>","import { render } from \"./MembershipDescriptionForm.vue?vue&type=template&id=0a8ade8d\"\nimport script from \"./MembershipDescriptionForm.vue?vue&type=script&lang=js\"\nexport * from \"./MembershipDescriptionForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <header class=\"flex justify-between items-center\">\n            <h4>Gene/Disease List</h4>\n        </header>\n        <div class=\"my-2\">\n            <table class=\"border-none\" v-if=\"genes\">\n                <thead>\n                    <tr>\n                        <th style=\"min-width: 10rem\">HGNC Symbol</th>\n                        <th style=\"min-width: 15rem\">Disease</th>\n                        <!-- <th style=\"max-width: 9rem\">Date Approved</th> -->\n                        <th\n                            v-if=\"canEdit\"\n                            style=\"width: 5rem\"\n                        ></th>\n                    </tr>\n                </thead>\n                <transition name=\"fade\" mode=\"out-in\">                \n                    <tbody v-if=\"genes.length == 0\">\n                        <tr>\n                            <td colspan=\"4\">\n                                <div class=\"p-2 text-center font-bold\">\n                                    <span v-if=\"loading\">Loading...</span>\n                                    <div v-else>\n                                        <p>There are no gene/disease pairs in the gene list.</p>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                    <tbody v-else>\n                        <!-- <transition-group name=\"slide-fade-down\"> -->\n                            <tr v-for=\"gene in orderedGenes\" :key=\"gene.id\">                            \n                                <template v-if=\"!gene.edit\">\n                                    <td>{{gene.gene_symbol}}</td>\n                                    <td>{{gene.disease_name}}</td>\n                                    <!-- <td>{{formatDate(gene.date_approved)}}</td> -->\n                                    <td\n                                        v-if=\"canEdit\"\n                                    >\n                                        <div v-if=\"!gene.edit\">\n                                            <dropdown-menu \n                                                :hide-cheveron=\"true\" \n                                                class=\"relative\"\n                                                v-if=\"!gene.toDelete\"\n                                            >\n                                                <template v-slot:label>\n                                                    <button class=\"btn btn-xs\">&hellip;</button>\n                                                </template>\n                                                <dropdown-item @click=\"edit(gene)\">Edit</dropdown-item>\n                                                <dropdown-item @click=\"confirmRemove(gene)\">Remove</dropdown-item>\n                                            </dropdown-menu>\n\n                                            <!-- <div v-if=\"gene.toDelete\">\n                                                <note>set for deletion in {{gene.removeCountdown}} seconds.</note>\n                                                <button @click=\"cancelPendingRemove(gene)\" class=\"btn btn-xs\">Cancel</button>\n                                            </div> -->\n                                        </div>\n                                    </td>\n                                </template>\n                                <template v-else>\n                                    <td>\n                                        <input-row label=\"\" :errors=\"errors.hgnc_id\" :vertical=\"true\">\n                                            <gene-search-select v-model=\"gene.gene\"></gene-search-select>\n                                        </input-row>\n                                    </td>\n                                    <!-- <td colspan=\"2\"> -->\n                                    <td>\n                                        <input-row label=\"\" :errors=\"errors.mondo_id\" :vertical=\"true\">\n                                            <disease-search-select v-model=\"gene.disease\"></disease-search-select>\n                                        </input-row>\n                                    </td>\n                                    <td>\n                                        <button class=\"btn btn-xs\" @click=\"updateCancel(gene)\">Cancel</button>\n                                        <button class=\"btn blue btn-xs\" @click=\"updateGene(gene)\">Save</button>\n                                    </td>\n                                </template>\n                            </tr>\n                        <!-- </transition-group> -->\n                    </tbody>\n                </transition>\n\n                <tbody v-if=\"canEdit\">\n                        <tr>\n                            <td>\n                                <input-row label=\"\" :errors=\"errors[`genes.0.hgnc_id`]\" :vertical=\"true\">\n                                    <gene-search-select v-model=\"newGene.gene\" @update:modelValue=\"debounceSave\" />\n                                </input-row>\n                            </td>\n                            <td colspan=\"4\">\n                                <input-row label=\"\" :errors=\"errors[`diseases.0.hgnc_id`]\" :vertical=\"true\">\n                                    <disease-search-select v-model=\"newGene.disease\" @update:modelValue=\"debounceSave\" />\n                                </input-row>\n                            </td>\n                        </tr>\n                </tbody>\n            </table>\n        </div>\n        <modal-dialog v-model=\"showConfirmRemove\" title=\"Confirm gene/disease pair delete.\">\n            <p>You are about to delete the gene/disease pair {{selectedGene.gene_symbol}}/{{selectedGene.disease_name}}.  Are you sure you want to continue?</p>\n            <button-row \n                submit-text=\"Yes, delete it.\" \n                cancel-text=\"No, cancel\"\n                @submitted=\"remove(selectedGene)\"\n                @canceled=\"cancelRemove\"\n            ></button-row>\n        </modal-dialog>\n    </div>\n</template>\n<script>\nimport {api} from '@/http'\nimport {ref, computed, onMounted} from 'vue';\nimport {debounce, sortBy} from 'lodash'\nimport {useStore} from 'vuex';\nimport GeneSearchSelect from '@/components/forms/GeneSearchSelect.vue'\nimport DiseaseSearchSelect from '@/components/forms/DiseaseSearchSelect.vue'\nimport is_validation_error from '@/http/is_validation_error'\nimport {hasAnyPermission} from '@/auth_utils'\n\nexport default {\n    name: 'VcepGeneList',\n    components: {\n        GeneSearchSelect,\n        DiseaseSearchSelect,\n    },\n    props: {\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n        'editing'\n    ],\n    computed: {\n        selectedGeneSymbol () {\n            return this.selectedGene && this.selectedGene.gene ?  this.selectedGene.gene.gene_symbol : 'Unknown Gene Symbols'\n        },\n        selectedDiseaseName () {\n            return this.selectedGene && this.selectedGene.disease ?  this.selectedGene.disease.name : 'Unknown Disease Name'\n        }\n    },\n    setup(props, context) {\n        const store = useStore();\n\n        const showConfirmRemove = ref(false);\n        const selectedGene = ref({gene: {}, disease: {}});\n\n        const group = computed(() => {\n            return store.getters['groups/currentItemOrNew'];\n        });\n\n\n        const newGene = ref({gene: null, disease: null});\n\n        const loading = ref(false);\n        const errors = ref({});\n        const genes = ref([]);\n        const orderedGenes = computed(() => {\n            const sortedGenes = [...genes.value];\n            sortedGenes.sort((a,b) => {\n                if (a.gene_symbol == b.gene_symbol) {\n                    return 0;\n                }\n                return (a.gene_symbol > b.gene_symbol) ? 1 : -1;\n            });\n            return sortedGenes;\n        })\n\n        const clearNewGene = () => {\n            newGene.value = {gene: null, disease: null};\n            errors.value = {};\n        }\n\n        const edit = (gene) => {\n            gene.edit = true;\n        }\n\n        const clearRemoveCountdown = (gene) => {\n            if (gene.removeTimeout) {\n                clearTimeout(gene.removeTimeout);\n                clearInterval(gene.removeInterval);\n                gene.removeCountdown = 10;\n            }\n        }\n\n        const clearRemovalFlags = (gene) => {\n            delete(gene.toDelete);\n            delete(gene.removeInterval);\n            delete(gene.removeTimeout);\n        }\n\n        const cancelPendingRemove = (gene) => {\n            clearRemoveCountdown(gene);\n            clearRemovalFlags(gene);\n        }\n\n        const confirmRemove = (gene) => {\n            selectedGene.value = gene;\n            showConfirmRemove.value = true;\n        }\n\n        const remove = async (gene) => {\n            try {\n                await api.delete(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`)\n                await getGenes();\n                cancelRemove();\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n        }\n\n        const cancelRemove = () => {\n            selectedGene.value = {gene: {}, disease: {}};\n            showConfirmRemove.value = false;\n        }\n        \n        const getGenes = async () => {\n            if (!group.value.uuid)  {\n                return;\n            }\n            loading.value = true;\n            try {\n                genes.value = await api.get(`/api/groups/${group.value.uuid}/expert-panel/genes?with[]=gene&with[]=disease`)\n                    .then(response => response.data);\n                    \n                // need to set genes on the expert_panel for requirements validation\n                group.value.expert_panel.genes = genes.value;\n            } catch (error) {\n                console.log(error);\n                store.commit('pushError', error.response.data);\n            }\n            loading.value = false;\n        }\n\n        const save = async () => {\n            try {\n                if (newGene.value.gene !== null && newGene.value.disease !== null) {\n\n                    await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, {\n                        genes: [{\n                            hgnc_id: newGene.value.gene.hgnc_id,\n                            mondo_id: newGene.value.disease.mondo_id\n                        }]\n                    });\n                    await getGenes();\n\n                    clearNewGene();\n                }\n\n                errors.value = {};\n                context.emit('saved')\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    errors.value = error.response.data.errors\n                }\n            }\n        };\n\n        const debounceSave = debounce(save, 500)\n\n        const updateGene = async (gene) => {\n            try {\n                gene.hgnc_id = gene.gene.hgnc_id;\n                gene.mondo_id = gene.disease.mondo_id;\n                await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`, gene);\n                await getGenes();\n                delete(gene.edit);\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    errors.value = error.response.data.errors\n                }\n            }\n        }\n        const updateCancel = gene => {\n            delete(gene.edit);\n        }\n\n        const cancel = () => {\n            clearNewGene();\n        }\n\n        const canEdit = computed(() => {\n            return hasAnyPermission(['ep-applications-manage', ['application-edit', group.value]])\n                && !props.readonly\n        })\n\n        onMounted(() => {\n            getGenes();\n        });\n\n        return {\n            group,\n            genes,\n            newGene,\n            orderedGenes,\n            errors,\n            loading,\n            updateGene,\n            updateCancel,\n            save,\n            debounceSave,\n            cancel,\n            edit, \n            remove,\n            cancelPendingRemove,\n            canEdit,\n            showConfirmRemove,\n            confirmRemove,\n            cancelRemove,\n            selectedGene,\n        }        \n    }\n}\n</script>\n","import { render } from \"./VcepGeneList.vue?vue&type=template&id=36b609d4\"\nimport script from \"./VcepGeneList.vue?vue&type=script&lang=js\"\nexport * from \"./VcepGeneList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <p>\n            The Gene Curation Expert Panel (GCEP) leaders(s) will complete the checkbox attestations document below on behalf of the GCEP. \n        </p>\n        <ul class=\"ml-4 mt-2\">\n            <li>\n                <input-row :errors=\"errors.utilize_gt\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.utilize_gt\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        This GCEP will utilize the ClinGen Gene Tracker for documentation of all precuration information, consistent with the current Lumping and Splitting working group guidance, for gene-disease relationships.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.utilize_gci\" :hide-label=\"true\">\n                    <checkbox \n                        v-model=\"group.expert_panel.utilize_gci\" \n                        :disabled=\"disabled\"  \n                        @update:modelValue=\"emitUpdate(), checkCompleteness()\"\n                    >\n                        This GCEP will utilize the ClinGen Gene Curation Interface for documentation of all gene-disease validity classifications.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.curations_publicly_available\" :hide-label=\"true\">\n                    <checkbox \n                        v-model=\"group.expert_panel.curations_publicly_available\" \n                        :disabled=\"disabled\"\n                        @update:modelValue=\"emitUpdate(), checkCompleteness()\"\n                    >\n                        All curations completed by this group will be made publicly available through the ClinGen website immediately upon completion.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.pub_policy_reviewed\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.pub_policy_reviewed\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        The <publication-policy-link /> has been reviewed and a manuscript concept sheet will be submitted to the NHGRI and  ClinGen Steering Committee before the group prepares a publication for submission.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.draft_manuscripts\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.draft_manuscripts\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        Draft manuscripts will be submitted to the ClinGen Gene Curation WG for review prior to submission. \n                        Email: <a href=\"mailto:genecuration@clinicalgenome.org\">genecuration@clinicalgenome.org</a>\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.recuration_process_review\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.recuration_process_review\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        The ClinGen <gcep-recuration-process-link>Gene-Disease Validity Recuration Process</gcep-recuration-process-link> has been reviewed.\n                    </checkbox>\n                </input-row>\n            </li>\n        </ul>\n\n        <p>\n            Biocurators are expected to become familiar with the ClinGen <training-materials-link /> located on <training-materials-link>ClinicalGenome.org</training-materials-link>. Biocurators are requested to join the mailing list for ClinGen Biocurator Working Group, and expected to attend those calls that focus on gene curation SOP and/or framework updates.\n        </p>\n\n        <ul class=\"ml-4 mt-2\">\n            <li>\n                <input-row :errors=\"errors.biocurator_training\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.biocurator_training\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        Biocurators have received training and/or there is a plan in place to train any biocurators who have not received all training yet. \n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <checkbox v-model=\"gci_training\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                    Biocurators are trained on the use of the Gene Curation Interface (GCI) and/or there is a plan in place to train any biocurators who are not yet trained on the use of the GCI”\n                </checkbox>\n                <input-row \n                    v-model=\"group.expert_panel.gci_training_date\" \n                    @update:modelValue=\"emitUpdate(), checkCompleteness()\"\n                    v-show=\"gci_training\" \n                    :errors=\"gciTrainingErrors\"\n                    label=\"Date Trained\"\n                    type=\"date\"\n                    class=\"ml-6\"\n                />\n            </li>\n            <li>\n                <input-row :errors=\"errors.biocurator_mailing_list\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.biocurator_mailing_list\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        Biocurators have joined the Biocurator WG mailing list and/or there is a plan in place to have them join mailing list.\n                        <br>The calls occur on the 2nd and 4th Thursdays from 12-1pm.\n                    </checkbox>\n                </input-row>\n            </li>\n        </ul>\n    </div>\n</template>\n<script>\nimport {api, isValidationError} from '@/http'\n\nexport default {\n    name: 'AttestationGcep',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            gci_training: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        },\n        gciTrainingErrors () {\n            const trainingErrors = this.errors.gci_training || [];\n            const dateErrors = this.errors.gci_training_date || [];\n            return [...trainingErrors, ...dateErrors];\n        },\n        gci_training_comp () {\n            return Boolean(this.group.expert_panel.gci_training_date)\n        }\n    },\n    watch: {\n        group: {\n            immediate: true,\n            handler: function (to) {\n                this.gci_training = Boolean(to.expert_panel.gci_training_date)\n            }\n        },\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/gcep`,\n                this.group.expert_panel.attributes)\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        emitUpdate () {\n            this.$emit('update');\n        },\n        checkCompleteness () {\n            if (this.group.expert_panel.utilize_gt\n                && this.group.expert_panel.utilize_gci\n                && this.group.expert_panel.curations_publicly_available\n                && this.group.expert_panel.pub_policy_reviewed\n                && this.group.expert_panel.draft_manuscripts\n                && this.group.expert_panel.recuration_process_review\n                && this.group.expert_panel.biocurator_training\n                && this.group.expert_panel.gci_training_date !== null\n                && this.group.expert_panel.biocurator_mailing_list\n                && this.group.expert_panel.gcep_attestation_date === null\n            ) {\n                this.group.expert_panel.gcep_attestation_date = new Date();\n                return;\n            }\n            this.group.expert_panel.gcep_attestation_date = null;\n        }\n    },\n}\n</script>","import { render } from \"./AttestationGcep.vue?vue&type=template&id=1697f828\"\nimport script from \"./AttestationGcep.vue?vue&type=script&lang=js\"\nexport * from \"./AttestationGcep.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <p>\n            Expert Panels are expected to keep their variant interpretations up-to-date and to expedite the re-review of variants that have a conflicting assertion submitted to ClinVar after the Expert Panel submission. Please check all 3 boxes below to attest that the VCEP will follow the ClinGen-approved schedule described below <strong><em>or</em></strong> describe other plans at the bottom of the section.\n        </p>\n        <ul class=\"ml-4 mt-2\">\n            <li>\n                <input-row :errors=\"errors.reanalysis_conflicting\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.reanalysis_conflicting\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        VCEPs are expected to reassess any newly submitted conflicting assertion in ClinVar from a one star submitter or above and attempt to resolve or address the conflict within 6 months of being notified about the conflict from ClinGen. Please reach out to the submitter if you need additional information about the conflicting assertion.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.reanalysis_review_lp\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.reanalysis_review_lp\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        VCEPs are expected to re-review all LP and VUS classifications made by the EP at least every 2 years to see if new evidence has emerged to re-classify the variants\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.reanalysis_review_lb\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.reanalysis_review_lb\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        VCEPs are expected to re-review any LB classifications when new evidence is available or when requested by the public via the ClinGen website.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.reanalysis_other\" :hide-label=\"true\">\n                    <checkbox v-model=\"otherCheckbox\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        Plans differ from the expectations above.\n                    </checkbox>\n                    <transition name=\"slide-fade-down\">\n                        <div class=\"ml-4\" v-if=\"otherCheckbox\">\n                            <label for=\"reanalysis-other-textarea\">Explain differences:</label>\n                            <textarea \n                                v-model=\"group.expert_panel.reanalysis_other\" \n                                class=\"w-full\"\n                                id=\"reanalysis-other-textarea\"\n                                :disabled=\"disabled\"\n                                @update:modelValue=\"$emit('update'), checkCompleteness()\"\n                            ></textarea>\n                        </div>\n                    </transition>\n                </input-row>\n            </li>\n        </ul>\n    </div>\n</template>\n<script>\nimport api from '@/http/api'\nimport is_validation_error from '../../http/is_validation_error'\n\nexport default {\n    name: 'ReanalysisForm',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            otherCheckbox: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            }, \n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        }\n    },\n    watch: {\n        otherCheckbox (to) {\n            if (!to) {\n                this.group.expert_panel.reanalysis_other = null;\n            }\n        }\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/reanalysis`, this.group.expert_panel)\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        checkCompleteness () {\n            const checkedStandard = this.group.expert_panel.reanalysis_conflicting\n                && this.group.expert_panel.reanalysis_review_lp\n                && this.group.expert_panel.reanalysis_review_lb;\n            if (checkedStandard\n                ||  (\n                    this.otherCheckbox \n                    && Boolean(this.group.expert_panel.reanalysis_other)\n                )\n                && this.group.expert_panel.gcep_attestation_date === null\n            ) {\n                this.group.expert_panel.reanalysis_attestation_date = new Date();\n                return;\n            }\n            this.group.expert_panel.reanalysis_attestation_date = null;\n        }\n    }\n}\n</script>","import { render } from \"./AttestationReanalysis.vue?vue&type=template&id=0ab54e02\"\nimport script from \"./AttestationReanalysis.vue?vue&type=script&lang=js\"\nexport * from \"./AttestationReanalysis.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <header class=\"flex justify-between items-center\">\n            <h4>Description of Scope</h4>\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing\"\n                @click=\"$emit('update:editing', true)\"\n            ></edit-icon-button>\n        </header>\n        <div class=\"mt-2\">\n            <transition name=\"fade\" mode=\"out-in\">\n                <input-row \n                    v-if=\"editing\"\n                    v-model=\"group.expert_panel.scope_description\"\n                    :errors=\"errors.scope_description\"\n                    type=\"large-text\"\n                    vertical\n                    @update:modelValue=\"$emit('update')\"\n                >\n                    <template v-slot:label>\n                        Describe the scope of work of the Expert Panel including the disease area(s), genes being addressed, and any specific rational for choosing the condition(s).\n                        See the <vcep-protocol-link v-if=\"group.isVcep()\" /> <gcep-quick-guide-link v-if=\"group.isGcep()\" /> for more information.\n                    </template>\n                </input-row>\n                <div v-else>\n                    <markdown-block \n                        v-if=\"group.expert_panel.scope_description\" \n                        :markdown=\"group.expert_panel.scope_description\">\n                    </markdown-block>\n                    \n                    <p class=\"well cursor-pointer\" v-else @click=\"showForm\">\n                        A description of expertise has not yet been provided.\n                    </p>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n<script>\nimport Group from '@/domain/group'\nimport GcepQuickGuideLink from '../links/GcepQuickGuideLink.vue';\n\nexport default {\n    name: \"scopeDescriptionForm\",\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({})\n        }\n    },\n    emits: [\n        \"update:editing\",\n        \"update:group\",\n        \"update\"\n    ],\n    computed: {\n        group: {\n            get() {\n                return this.$store.getters[\"groups/currentItem\"] || new Group();\n            },\n            set(value) {\n                this.$store.commit(\"groups/addItem\", value);\n            }\n        },\n        scopeDescription: {\n            get: function () {\n                return this.group.expert_panel.scope_description;\n            },\n            set: function (value) {\n                const groupCopy = this.group.clone();\n                groupCopy.expert_panel.scope_description = value;\n                this.$emit(\"update:group\", groupCopy);\n            }\n        }\n    },\n    components: { GcepQuickGuideLink }\n}\n</script>","import { render } from \"./ScopeDescriptionForm.vue?vue&type=template&id=776ceae4\"\nimport script from \"./ScopeDescriptionForm.vue?vue&type=script&lang=js\"\nexport * from \"./ScopeDescriptionForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}