{"version":3,"sources":["webpack:///./src/components/groups/AnnualUpdateAlert.vue","webpack:///./src/components/groups/AnnualUpdateAlert.vue?6eef","webpack:///./src/views/Dashboard.vue","webpack:///./src/views/Dashboard.vue?1521"],"names":["class","$options","$data","id","_createBlock","_component_static_alert","variant","_createElementVNode","_createVNode","_component_icon_review","height","width","$props","_createElementBlock","_hoisted_2","_toDisplayString","displayName","_hoisted_4","for_year","_ctx","end","uuid","_component_router_link","to","name","params","props","group","type","Object","required","showGroupName","Boolean","default","data","annualReview","loading","computed","window","this","isPending","completed_at","now","Date","endDate","parse","addDays","watch","immediate","handler","getAnnualUpdate","methods","expert_panel","definition_is_approved","api","get","headers","then","response","catch","error","console","log","status","__exports__","render","$setup","person","_TransitionGroup","tag","_Fragment","_renderList","notification","_component_notification_item","key","onRemoved","task","_component_sustained_curation_review_alert","assignee","_component_annual_update_alert","show-group-name","membershipsWithPendingCois","membership","_component_coi_alert","_component_tabs_container","_component_tab_item","label","length","_component_data_table","fields","sort","$event","onRowClick","row-class","cell-status_name","_withCtx","value","_component_badge","color","cell-displayName","item","toUpperCase","_component_person_profile","_component_coi_list","components","CoiList","NotificationItem","PersonProfile","AnnualUpdateAlert","testInst","setup","store","useStore","router","useRouter","user","getters","personFromStore","Person","loadPersonInStore","commit","onMounted","loadingNotifications","ref","notifications","getNotifications","removeNotification","index","findIndex","splice","groups","memberships","map","m","filter","g","Group","coordinatingGroups","hasPermission","groupFields","sortable","String","resolveValue","configs","statuses","currentStepName","groupSort","field","desc","groupBadgeColor","Active","Applying","Retired","Removed","sustainedCurationReviews","getSustainedCurationReviewTasks","with","where","task_type_id","assignee_type","assignee_id","Set","cg","pending","queryString","queryStringFromParams","url","uniqueTasks","forEach","dispatch","navigateToGroup","push"],"mappings":"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","file":"js/chunk-6a9e53f7.e3798dde.js","sourcesContent":["<template>\n    <static-alert :variant=\"variant\"  v-if=\"isPending && annualReview.id\">\n        <div class=\"flex space-x-2 items-center mb-3\">\n            <icon-review height=\"30\" width=\"30\"></icon-review>\n            <div>\n                <p>\n                    <span v-if=\"showGroupName\"><strong>{{group.displayName}}</strong> has</span>\n                    <span v-else>You have</span>\n                    an <strong>annual update for {{window.for_year}}</strong> due on <strong>{{formatDate(window.end)}}</strong>.\n                </p>\n                <router-link \n                    class=\"btn font-bold\" \n                    :to=\"{name: 'AnnualUpdate', params: {uuid: group.uuid}}\"\n                    v-if=\"group.uuid\"\n                >\n                    Complete the Annual Update\n                </router-link>\n            </div>\n        </div>\n    </static-alert>\n</template>\n<script>\nimport { api } from '@/http';\nexport default {\n    name: 'AnnualUpdateAlert',\n    props: {\n        group: {\n            type: Object,\n            required: true,\n        },\n        showGroupName: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            annualReview: {},\n            loading: false\n        }\n    },\n    computed: {\n        window () {\n            return this.annualReview.window ? this.annualReview.window : {}\n        },\n\n        isPending() {\n            return !(this.annualReview.completed_at)\n        },\n        \n        variant () {\n            const now = new Date();\n            if (!this.window.end) {\n                return 'warning';\n            }\n            const endDate = new Date(Date.parse(this.window.end));\n\n            return now > this.addDays(endDate, -7) ? 'danger' : 'warning';\n        }\n    },\n    watch: {\n        group: {\n            immediate: true,\n            handler () {\n                this.getAnnualUpdate();\n            }\n        }\n    },\n    methods: {\n        getAnnualUpdate () {\n            if (!this.group.uuid) {\n                return;\n            }\n\n            if (!this.group.expert_panel.definition_is_approved) {\n                return;\n            }\n\n            this.loading = true;\n            api.get(`/api/groups/${this.group.uuid}/expert-panel/annual-updates`, {headers: {'X-Ignore-Missing': 1} })\n                .then(response => {\n                    this.annualReview = response.data\n                })\n                .catch(error => {\n                    console.log(error.response)\n                    if (error.response.status == 404) {\n                        console.log('fuckety fuck fuck')\n                        return;\n                    }\n                });\n            this.loading = false;\n        }\n    }\n}\n</script>","import { render } from \"./AnnualUpdateAlert.vue?vue&type=template&id=4336ad2c\"\nimport script from \"./AnnualUpdateAlert.vue?vue&type=script&lang=js\"\nexport * from \"./AnnualUpdateAlert.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <h1>\n            Dashboard\n            <div class=\"note font-normal\">\n                User ID: {{user.id}}\n                |\n                Person ID: {{user.person ? user.person.id : 'no person!!'}}\n            </div>\n        </h1>\n        <transition-group tag=\"div\" name=\"slide-fade-down\">\n            <notification-item \n                v-for=\"notification in notifications\" :key=\"notification.id\"\n                :notification=\"notification\"\n                class=\"mb-2\"\n                @removed=\"removeNotification(notification)\"\n            ></notification-item>\n        </transition-group>\n\n        <sustained-curation-review-alert\n            v-for=\"task in sustainedCurationReviews\" \n            :key=\"task.id\"\n            :group=\"task.assignee\"\n            class=\"mb-2\"\n        />\n\n        <annual-update-alert \n            v-for=\"group in coordinatingGroups\" :key=\"group.id\" \n            :group=\"group\"\n            :show-group-name=\"true\"\n            class=\"mb-2\"\n        />\n\n        <coi-alert\n            v-for=\"membership in user.person.membershipsWithPendingCois\" \n            :key=\"membership.id\"\n            :membership=\"membership\"\n            class=\"mb-2\"\n        />\n\n        <tabs-container class=\"mt-8\">\n            <tab-item label=\"Your Groups\">\n                <div class=\"well\" v-if=\"!groups.length\">You are not assigned to any groups.</div>\n                <data-table\n                    v-else\n                    :data=\"groups\"\n                    :fields=\"groupFields\"\n                    v-model:sort=\"groupSort\"\n                    @rowClick=\"navigateToGroup\"\n                    row-class=\"cursor-pointer\"\n                >\n                    <template v-slot:cell-status_name=\"{value}\">\n                        <badge :color=\"groupBadgeColor(value)\">{{value}}</badge>\n                    </template>\n                    <template v-slot:cell-displayName=\"{item}\">\n                        {{item.name}} {{item.type.name.toUpperCase()}}\n                    </template>\n                </data-table>\n            </tab-item>\n\n            <tab-item label=\"Your Info\">\n                <person-profile :person=\"personFromStore\"></person-profile>\n            </tab-item>\n\n            <tab-item label=\"COIs\">\n                <coi-list :person=\"user.person\"></coi-list>\n            </tab-item>\n\n        </tabs-container>\n    </div>\n</template>\n<script>\nimport {useStore} from 'vuex'\nimport {useRouter} from 'vue-router'\nimport {ref, computed, onMounted, watch} from 'vue'\nimport {api, queryStringFromParams} from '@/http'\nimport AnnualUpdateAlert from '@/components/groups/AnnualUpdateAlert';\nimport NotificationItem from '@/components/NotificationItem'\nimport CoiList from '@/components/people/CoiList'\nimport PersonProfile from '@/components/people/PersonProfile'\nimport Person from \"@/domain/person\"\nimport Group from \"@/domain/group\"\nimport configs from '@/configs'\n\nexport default {\n    name: 'Dashboard',\n    components: {\n        CoiList,\n        NotificationItem,\n        PersonProfile,\n        AnnualUpdateAlert\n    },\n    data() {\n        return {\n            testInst: null\n        }\n    },\n    props: {\n        \n    },\n    setup () {\n        const store = useStore();\n        const router = useRouter();\n        const user = computed(() => {\n            return store.getters['currentUser']\n        });\n        const personFromStore = computed(() => {\n            return store.getters['people/currentItem'] || new Person();\n        })\n        const loadPersonInStore = () => {\n            if (user.value.id && user.value.person && user.value.person.id) {\n                store.commit('people/addItem', user.value.person);\n                store.commit('people/setCurrentItemIndex', user.value.person);\n            }\n        }\n        watch(() => user, () => {\n            loadPersonInStore();\n        });\n        onMounted(() => {\n            loadPersonInStore();\n        });\n\n        // NOTIFICATIONS\n        // TODO: Extract to modules\n        const loadingNotifications = ref(false);\n        const notifications = ref([]);\n        const getNotifications = async () => {\n            loadingNotifications.value = true;\n            if (user.value.person && user.value.person.uuid) {\n                notifications.value = await api.get(`/api/people/${user.value.person.uuid}/notifications/unread`)\n                                .then(response => response.data)\n            }\n            loadingNotifications.value = false;\n        }\n        const removeNotification = (notification) => {\n            const index = notifications.value.findIndex((item) => item.id == notification.id);\n            if (index > -1) {\n                notifications.value.splice(index, 1);\n            }\n        }\n\n\n        // GROUPS\n        // TODO: Get groups by search with TONS of info.\n        // TODO: Extract that work to a module.\n        const groups = computed(() => {\n            return user.value.memberships\n                    .map(m => m.group)\n                    .filter(g => g !== null)\n                    .map(group => new Group(group))\n        });\n\n        const coordinatingGroups = computed(() => {\n            return user.value.memberships\n                    .filter(m => m.hasPermission('annual-update-manage'))\n                    .map(m => m.group)\n                    .filter(g => g !== null)\n                    .map(group => new Group(group))\n        });\n\n        const groupFields = ref([\n            {\n                name: 'displayName',\n                sortable: true,\n                type: String\n            },\n            {\n                name: 'status.name',\n                label: 'Status',\n                sortable: true,\n                resolveValue: (item) => {\n                    if (item.status.id == configs.groups.statuses['applying'].id) {\n                        return item.status.name+' - '+item.expert_panel.currentStepName;\n                    }\n                    return item.status.name;\n                },\n                type: String\n            },\n        ]);\n        const groupSort = ref({\n            field: 'displayName',\n            desc: false\n        });\n        const groupBadgeColor = (status) => {\n            const map = {\n                Active: 'green',\n                Applying: 'blue',\n                Retired: 'yellow',\n                Removed: 'red'\n            }\n            return map[status] || 'blue'\n        };\n\n        const sustainedCurationReviews = ref([]);\n        const getSustainedCurationReviewTasks = async () => {\n            const params = {\n                with: ['assignee'],\n                where: {\n                    task_type_id: 1,\n                    assignee_type: 'App\\\\Modules\\\\Group\\\\Models\\\\Group',\n                    assignee_id: [...(new Set(coordinatingGroups.value.map(cg => cg.id)))],\n                    pending: 1\n                }\n            }\n            const queryString = queryStringFromParams(params);\n            const url = `/api/tasks${queryString}`;\n            sustainedCurationReviews.value = await api.get(url)\n                                                .then(response => {\n                                                    const uniqueTasks = {};\n                                                    response.data.forEach(task => {\n                                                        uniqueTasks[task.assignee_id] = task;\n                                                    })\n                                                    return uniqueTasks;\n                                                });\n        }\n\n        // TODO: extract to module.\n        // TODO: Get coi data on demand\n\n        onMounted(async () => {\n            getNotifications();\n            await store.dispatch('forceGetCurrentUser');\n            await getSustainedCurationReviewTasks();\n        })\n\n        return {\n            user,\n            sustainedCurationReviews,\n            personFromStore,\n            loadingNotifications,\n            notifications,\n            groups,\n            coordinatingGroups,\n            groupSort,\n            groupFields,\n            groupBadgeColor,\n            getNotifications,\n            removeNotification,\n            navigateToGroup: (item) => {\n                router.push({\n                    name: 'GroupDetail',\n                    params: {uuid: item.uuid}\n                })\n            }\n        }\n        \n    }\n}\n</script>","import { render } from \"./Dashboard.vue?vue&type=template&id=22b66d17\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}