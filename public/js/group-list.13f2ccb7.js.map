{"version":3,"file":"js/group-list.13f2ccb7.js","mappings":"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","sources":["webpack://epam/./src/forms/form_factory.js","webpack://epam/./src/components/groups/GroupForm.vue","webpack://epam/./src/components/groups/GroupForm.vue?fb8f","webpack://epam/./src/views/groups/GroupList.vue","webpack://epam/./src/views/groups/GroupList.vue?951c"],"sourcesContent":["import {ref} from 'vue'\nimport is_validation_error from '@/http/is_validation_error'\nimport api from '@/http/api'\n\nexport const errors = ref({});\nconst editing = ref(false);\nconst hideForm = () => {\n    editing.value = false;\n    errors.value = {};\n}\nexport const submitFormData = async ({method, url, data}) => {\n    try {\n        // return await api.put(\n        return await api({\n            method,\n            url, \n            data\n        }).then(response => response.data.data)\n    } catch (error) {\n        if (is_validation_error(error)) {\n            errors.value = {...errors, ...error.response.data.errors}\n        }\n    }\n}\n\nexport const resetErrors = () => {\n    errors.value = {};\n}\n\nexport default () => {\n    return {\n        errors,\n        editing,\n        hideForm,\n        submitFormData,\n        resetErrors,\n    }\n}","<template>\n    <div>\n        <input-row \n            v-if=\"canSetType\"\n            v-model=\"group.group_type_id\"\n            :errors=\"errors.group_type_id\"\n            type=\"select\"\n            :options=\"typeOptions\"\n            label=\"Type\" \n        />\n\n        <dictionary-row label=\"Type\" v-else>\n            {{typeDisplayName}}\n        </dictionary-row>\n        \n        <transition name=\"slide-fade-down\" mode=\"out-in\">\n            <div v-if=\"group.group_type_id > 2 && group.expert_panel\">\n                <input-row \n                    label=\"Long Base Name\" \n                    v-model=\"group.expert_panel.long_base_name\"\n                    @update:modelValue=\"emitUpdate\"\n                    placeholder=\"Long base name\"\n                    :errors=\"errors.long_base_name\"\n                    input-class=\"w-full\"\n                />\n                <input-row \n                    label=\"Short Base Name\" \n                    v-model=\"group.expert_panel.short_base_name\" \n                    @update:modelValue=\"emitUpdate\"\n                    placeholder=\"Short base name\"\n                    :errors=\"errors.short_base_name\"\n                    input-class=\"w-full\"\n                />\n                <div v-if=\"hasAnyPermission(['groups-manage'])\">\n                    <input-row \n                        label=\"Affiliation ID\" \n                        v-model=\"group.expert_panel.affiliation_id\" \n                        :placeholder=\"affiliationIdPlaceholder\"\n                        :errors=\"errors.affiliation_id\"  \n                        input-class=\"w-full\"\n                        @update:modelValue=\"emitUpdate\"\n                    >\n                        <template v-slot:label>\n                            Affiliation ID\n                            <note>admin-only</note>\n                        </template>\n                    </input-row>\n                </div>\n                <dictionary-row label=\"Affiliation ID\" v-else>\n                    <span v-if=\"group.expert_panel.affiliation_id\">{{group.expert_panel.affiliation_id}}</span>\n                    <span v-else class=\"text-gray-400\">{{'Not yet assigend'}}</span>\n                </dictionary-row>\n            </div>\n            <div v-else>\n                <input-row \n                    v-model=\"group.name\" \n                    placeholder=\"Name\" \n                    label=\"Name\" \n                    input-class=\"w-full\"\n                    :errors=\"errors.name\"\n                    @update:modelValue=\"emitUpdate\"\n                />\n            </div>\n        </transition>\n        <div v-if=\"hasPermission('groups-manage')\">\n            <input-row \n                v-model=\"group.group_status_id\"\n                type=\"select\"\n                :options=\"statusOptions\"\n                :errors=\"errors.group_status_id\"\n                @update:modelValue=\"emitUpdate\"\n            >\n                <template v-slot:label>\n                    Status:\n                    <note>admin-only</note>\n                </template>\n            </input-row>\n\n            <input-row\n                v-model=\"group.parent_id\"\n                type=\"select\"\n                :options=\"parentOptions\"\n                :errors=\"errors.parent_id\"\n                @update:modelValue=\"emitUpdate\"\n            >\n                <template v-slot:label>\n                    Parent group:\n                    <note>admin-only</note>\n                </template>\n            </input-row>\n        </div>\n    </div>\n</template>\n<script>\nimport {sortBy} from 'lodash'\nimport {isValidationError} from '@/http'\nimport {api} from '@/http'\nimport Group from '@/domain/group'\nimport configs from '@/configs'\nimport formFactory from '@/forms/form_factory'\n\nexport default {\n    name: 'GroupForm',\n    emits: [\n        'canceled',\n        'saved',\n        'update'\n    ],\n    data() {\n        return {\n            groupTypes: [\n                {id: 1, fullname: 'Working Group'},\n                {id: 2, fullname: 'Clinical Domain Working Group'},\n                {id: 3, fullname: 'GCEP'},\n                {id: 4, fullname: 'VCEP'},\n            ],\n            groupStatuses: configs.groups.statuses,\n            newGroup: new Group(),\n            parents: []\n        }\n    },\n    computed: {\n        group: {\n            get() {\n                const group = this.$store.getters['groups/currentItem'];\n                if (group) {\n                    return group;\n                }\n                return this.newGroup;\n            },\n            set (value) {\n                try {\n                    this.$store.commit('groups/addItem', value);\n                } catch (e) {\n                    this.newGroup = value;\n                }\n            }\n        },\n        statusOptions () {\n            return Object.values(this.groupStatuses).map(status => ({value: status.id, label: this.titleCase(status.name)}))\n        },\n        typeOptions () {\n            return this.groupTypes.map(type => ({value: type.id, label: type.fullname}));\n        },\n        canSetType() {\n            return this.hasPermission('groups-manage') && !this.group.id \n        },\n        typeDisplayName () {\n            if (!this.group.type) {\n                return \"🐇🥚\";\n            }\n            if (this.group.type.name) {\n                return (this.group.type.id < 3) \n                    ? this.group.type.name.toUpperCase() \n                    : this.group.expert_panel.type.name.toUpperCase();\n            }\n            return null;\n        },\n        affiliationIdPlaceholder () {\n            return 50000\n        },\n        cdwgs () {\n            return this.$store.getters['cdwgs/all']\n        },\n        namesDirty () {\n            return this.group.expert_panel.isDirty('long_base_name')\n                || this.group.expert_panel.isDirty('short_base_name');\n        },\n        affiliationIdDirty () {\n            console.log({\n                new: this.group.expert_panel.attributes.affiliation_id,\n                original: this.group.expert_panel.original.affiliation_id\n            });\n            return this.group.expert_panel.isDirty('affiliation_id');\n        },\n        parentOptions () {\n            const options = [{value: 0, label: 'None'}];\n            this.parents\n                .filter(group => group.type.can_be_parent)\n                .forEach(parent => {\n                    options.push({value: parent.id, label: parent.displayName})\n                })\n\n            return sortBy(options, 'label');\n        }\n    },\n    methods: {\n        async save() {\n            this.resetErrors();\n            try {\n                if (this.group.id) {\n                    await this.updateGroup();\n                    this.$emit('saved');\n\n                    // this.$store.dispatch('groups/find', this.group.uuid);\n                    // this.$store.commit('pushSuccess', 'Group info updated.');\n                    return;\n                } \n\n                const newGroup = await this.createGroup()\n                                    .then(response => response.data.data);\n                this.$emit('saved');\n                this.$store.commit('pushSuccess', 'Group created.');\n                this.$router.push({name: 'AddMember', params: {uuid: newGroup.uuid}});\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors;\n                }\n                throw error;\n            }\n        },\n        createGroup () {\n            let {\n                name, \n                parent_id, \n                group_type_id, \n                group_status_id\n            } = this.group.attributes;\n\n            const {short_base_name} = this.group.expert_panel;\n\n            if (name === null && this.group.expert_panel) {\n                name = this.group.expert_panel.long_base_name;\n            }\n\n            return this.$store.dispatch(\n                'groups/create', \n                {\n                    name,\n                    parent_id,\n                    group_type_id,\n                    group_status_id,\n                    short_base_name\n                }\n            );\n        },\n        updateGroup () {\n            const promises = [];\n            promises.push(this.saveGroupData());\n            if (this.group.expert_panel) {\n                promises.push(this.saveEpData());\n            }\n            \n            return Promise.all(promises);\n        },\n        saveGroupData () {\n            const promises = [];\n            if (this.group.isDirty('parent_id')) {\n                promises.push(this.saveParent());\n            }\n\n            if (this.group.isDirty('name')) {\n                promises.push(this.saveName())\n            }\n\n            if (this.group.isDirty('group_status_id')) {\n                promises.push(this.saveStatus())\n            }\n\n            return Promise.all(promises);\n        },\n        async saveEpData() {\n            const promises = []\n            if (this.namesDirty) {\n                const {long_base_name, short_base_name} = this.group.expert_panel;\n                promises.push(this.submitFormData({\n                    method: 'put',\n                    url: `/api/groups/${this.group.uuid}/expert-panel/name`, \n                    data: { long_base_name, short_base_name }\n                }));\n            }\n\n            if (this.affiliationIdDirty) {\n                promises.push(this.submitFormData({\n                    method: 'put',\n                    url: `/api/groups/${this.group.uuid}/expert-panel/affiliation-id`, \n                    data: { affiliation_id: this.group.expert_panel.affiliation_id }\n                }));\n            }\n\n            return await Promise.all(promises);\n        },\n\n        isDirty (attribute) {\n            return this.group[attribute] != this.group[attribute]\n        },\n        \n        saveParent () {\n            return this.submitFormData({\n                method: 'put',\n                url: `/api/groups/${this.group.uuid}/parent`, \n                data: { parent_id: this.group.parent_id }\n            })\n        },\n        saveName () {\n            return this.submitFormData({\n                method: 'put',\n                url: `/api/groups/${this.group.uuid}/name`,\n                data: {name: this.group.name}\n            })\n        },\n        saveStatus () {\n            return this.submitFormData({\n                method: 'put',\n                url: `/api/groups/${this.group.uuid}/status`,\n                data: {status_id: this.group.group_status_id}\n            })\n        },\n        resetData () {\n            if (this.group.uuid) {\n                this.$store.dispatch('groups/find', this.group.uuid);\n            }\n        },\n        cancel() {\n            if (this.group.uuid) {\n                this.resetData();\n            }\n            this.$emit('canceled');\n        },\n        async getParentOptions () {\n            const params = {\n                'where[group_type_id]': [1,2],\n                without: ['coordinators', 'expertPanel']\n            };\n\n            this.parents = await api.get(`/api/groups`, {params})\n                        .then(response => {\n                            return response.data\n                                .filter(group => group.id != this.group.id)\n                                .map(g => new Group(g))\n                        });\n        },\n        emitUpdate () {\n            this.$emit('update');\n        }\n    },\n    beforeMount() {\n        this.getParentOptions();\n        this.$store.dispatch('cdwgs/getAll');\n    },\n    setup (props, context) {\n        const {errors, submitFormData, resetErrors} = formFactory(props, context)\n\n        return {\n            errors,\n            submitFormData,\n            resetErrors\n        }\n    }\n}\n</script>","import { render } from \"./GroupForm.vue?vue&type=template&id=73153222\"\nimport script from \"./GroupForm.vue?vue&type=script&lang=js\"\nexport * from \"./GroupForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <h1 class=\"flex justify-between items-center\">\n            Groups\n            <button v-if=\"hasPermission('groups-manage')\" class=\"btn btn-xs\" @click=\"startCreateGroup\">Create a group</button>\n        </h1>\n        <tabs-container @tab-changed=\"getGroupsForType\">\n            <tab-item v-for=\"def in tabDefinitions\" :label=\"def.label\" :key=\"def.label\">\n                <div class=\"text-center w-full\" v-if=\"loading\">Loading...</div>\n                <div v-else>\n                    <div class=\"mb-2\">\n                        Filter: <input type=\"text\" v-model=\"filterString\" placeholder=\"name,id,status,coordinator name\">\n                    </div>\n                    <data-table\n\n                        :data=\"filteredGroups.filter(def.filter)\"\n                        :fields=\"fields\"\n                        v-model:sort=\"sort\"\n                        :row-click-handler=\"goToGroup\"\n                        v-remaining-height\n                        row-class=\"cursor-pointer active:bg-blue-100\"\n                    >\n                        <template v-slot:cell-displayStatus=\"{item}\">\n                            <badge class=\"text-xs\" :color=\"item.statusColor\">\n                                {{item.displayStatus}}<span v-if=\"item.status.id == 1 && item.isEp()\">&nbsp;-&nbsp;{{item.expert_panel.currentStepAbbr}}</span>\n                            </badge>\n                        </template>\n                        <template v-slot:cell-coordinators=\"{value}\">\n                            <div v-if=\"value.length == 0\"></div>\n                            <span v-for=\"(coordinator, idx) in value\" :key=\"coordinator.id\">\n                                <span v-if=\"idx > 0\">, </span>\n                                <router-link\n                                    :to=\"{name: 'PersonDetail', params: {uuid: coordinator.person.uuid}}\"\n                                    class=\"link\"\n                                    @click.stop\n                                >\n                                    {{coordinator.person.name}}\n                                </router-link>\n                            </span>\n                        </template>\n                    </data-table>\n                </div>\n            </tab-item>\n        </tabs-container>\n\n        <modal-dialog v-model=\"showCreateForm\" title=\"Create a New Group\" size=\"sm\">\n            <submission-wrapper @submitted=\"$refs.groupForm.save()\" @canceled=\"$refs.groupForm.cancel()\">\n                <group-form ref='groupForm' @canceled=\"showCreateForm=false\" @saved=\"showCreateForm = false\" />\n            </submission-wrapper>\n        </modal-dialog>\n    </div>\n</template>\n<script>\nimport {useStore} from 'vuex'\nimport {useRouter} from 'vue-router'\nimport {computed, ref} from 'vue'\nimport GroupForm from '@/components/groups/GroupForm.vue'\nimport SubmissionWrapper from '@/components/groups/SubmissionWrapper.vue'\nimport {hasAnyPermission} from '@/auth_utils'\n\n\nexport default {\n    name: 'ComponentName',\n    components: {\n        GroupForm,\n        SubmissionWrapper\n    },\n    props: {\n\n    },\n    data() {\n        return {\n            loading: false,\n            showCreateForm: false,\n            loadedFor: {\n                'VCEPs': false,\n                'GCEPs': false,\n                'CDWGs': false,\n                'WGs': false,\n            },\n            sort: {\n                field: 'id',\n                desc: false\n            },\n            fields: [\n                {\n                    name: 'id',\n                    label: 'ID',\n                    sortable: true\n                },\n                {\n                    name: 'name',\n                    label: 'Name',\n                    sortable: true,\n                    resolveValue: (item) => {\n                        return item.displayName\n                    }\n                },\n                {\n                    name: 'coordinators',\n                    sortable: false\n                },\n                {\n                    name: 'displayStatus',\n                    sortable: true,\n                    label: 'status'\n                },\n            ]\n        }\n    },\n    methods: {\n        startCreateGroup () {\n            this.showCreateForm = true;\n        },\n        async getGroupsForType (tabLabel) {\n            const typeTab = this.tabDefinitions.find(t => t.label === tabLabel);\n            if (this.loadedFor[tabLabel]) {\n                return;\n            }\n            this.loading = true;\n            await this.$store.dispatch('groups/getItems', {where: {group_type_id: typeTab.typeId}});\n            this.loadedFor[tabLabel] = true;\n            this.loading = false;\n        }\n\n    },\n    setup() {\n        const store = useStore();\n        const router = useRouter();\n\n\n        const tabDefinitions = computed( () => {\n            const tabs = [\n                {\n                    label: 'VCEPs',\n                    typeId: 4,\n                    filter: g => g.isVcep(),\n                },\n                {\n                    label: 'GCEPs',\n                    typeId: 3,\n                    filter: g => g.isGcep()\n                },\n{\n                    label: 'CDWGs',\n                    typeId: 2,\n                    filter: g => g.isCdwg()\n                },\n                {\n                    label: 'WGs',\n                    typeId: 1,\n                    filter: g => g.isWg()\n                },\n            ];\n\n            return tabs;\n        })\n\n\n\n        const filterString = ref(null);\n\n        const groups = computed(() => store.getters['groups/all']);\n\n        const filteredGroups = computed(() => groups.value.filter(group => {\n            if (!filterString.value) {\n                return true;\n            }\n\n            const pattern = new RegExp(`.*${filterString.value}.*`, 'i');\n\n            return group.name && group.name.match(pattern)\n                || group.displayName && group.displayName.match(pattern)\n                || (\n                    group.expert_panel &&\n                    group.expert_panel.full_short_base_name &&\n                    group.expert_panel.full_short_base_name.match(pattern)\n                )\n                || group.id == filterString.value\n                || group.status.name.match(pattern)\n                || (\n                    group.expert_panel &&\n                    group.expert_panel.currentStepName &&\n                    group.expert_panel.currentStepName.match(pattern)\n                    )\n                || group.coordinators.filter(c => c.person.name.match(pattern)).length > 0\n        }))\n\n        const goToItem = (item) => {\n            router.push({\n                name: 'GroupDetail',\n                params: {uuid: item.uuid}\n            })\n        }\n\n        return {\n            filterString,\n            groups,\n            filteredGroups,\n            tabDefinitions,\n            goToItem,\n            goToGroup: goToItem,\n        }\n    }\n\n}\n</script>\n","import { render } from \"./GroupList.vue?vue&type=template&id=ddabf580\"\nimport script from \"./GroupList.vue?vue&type=script&lang=js\"\nexport * from \"./GroupList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["errors","ref","editing","hideForm","value","submitFormData","async","method","url","data","api","then","response","error","is_validation_error","resetErrors","class","_createElementBlock","$options","_createBlock","_component_input_row","group_type_id","$event","$setup","type","options","label","_component_dictionary_row","_createVNode","_Transition","name","mode","expert_panel","_hoisted_1","long_base_name","placeholder","short_base_name","_ctx","_hoisted_2","affiliation_id","_component_note","_hoisted_5","_toDisplayString","_hoisted_7","_hoisted_8","group_status_id","parent_id","emits","groupTypes","id","fullname","groupStatuses","configs","groups","statuses","newGroup","Group","parents","computed","group","get","this","$store","getters","set","commit","e","statusOptions","Object","values","map","status","titleCase","typeOptions","canSetType","hasPermission","typeDisplayName","toUpperCase","affiliationIdPlaceholder","cdwgs","namesDirty","isDirty","affiliationIdDirty","console","log","new","attributes","original","parentOptions","filter","can_be_parent","forEach","parent","push","displayName","sortBy","methods","updateGroup","$emit","createGroup","$router","params","uuid","isValidationError","dispatch","promises","saveGroupData","saveEpData","Promise","all","saveParent","saveName","saveStatus","attribute","status_id","resetData","cancel","without","g","emitUpdate","beforeMount","getParentOptions","setup","props","context","formFactory","__exports__","render","_createElementVNode","onClick","_component_tabs_container","onTabChanged","_Fragment","_renderList","def","_component_tab_item","key","$data","_hoisted_4","_component_data_table","fields","sort","_withCtx","item","_component_badge","color","statusColor","displayStatus","isEp","currentStepAbbr","length","coordinator","idx","_hoisted_9","_component_router_link","to","person","_component_modal_dialog","title","size","_component_submission_wrapper","onSubmitted","groupForm","save","onCanceled","_component_group_form","onSaved","components","GroupForm","SubmissionWrapper","loading","showCreateForm","loadedFor","field","desc","sortable","resolveValue","startCreateGroup","tabLabel","typeTab","tabDefinitions","find","t","where","typeId","store","useStore","router","useRouter","tabs","isVcep","isGcep","isCdwg","isWg","filterString","filteredGroups","pattern","RegExp","match","full_short_base_name","currentStepName","coordinators","c","goToItem","goToGroup"],"sourceRoot":""}