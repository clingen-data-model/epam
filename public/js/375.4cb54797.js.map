{"version":3,"file":"js/375.4cb54797.js","mappings":"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","sources":["webpack://epam/./src/composables/judgement_utils.js","webpack://epam/./src/components/groups/AnnualUpdateAlert.vue","webpack://epam/./src/components/groups/AnnualUpdateAlert.vue?80f2","webpack://epam/./src/components/dashboard/ApplicationActivity.vue","webpack://epam/./src/components/dashboard/ApplicationActivity.vue?4e95","webpack://epam/./src/components/dashboard/DashboardAlerts.vue","webpack://epam/./src/components/dashboard/DashboardAlerts.vue?8476","webpack://epam/./src/views/Dashboard.vue","webpack://epam/./src/views/Dashboard.vue?040e"],"sourcesContent":["const decToColor = {'approve': 'green', 'approve-after-revisions': 'blue', 'request-revisions': 'yellow'}\n\nexport const judgementColor = judgement => {\n    if (!judgement.decision) return 'gray';\n    return decToColor[judgement.decision];\n}\n","<template>\n    <static-alert :variant=\"variant\"  v-if=\"isPending && annualReview.id\">\n        <div class=\"flex space-x-2 items-center mb-3\">\n            <icon-review height=\"30\" width=\"30\"></icon-review>\n            <div>\n                <p>\n                    <span v-if=\"showGroupName\"><strong>{{group.displayName}}</strong> has</span>\n                    <span v-else>You have</span>\n                    an <strong>annual update for {{window.for_year}}</strong> due on <strong>{{formatDate(window.end)}}</strong>.\n                </p>\n                <router-link \n                    class=\"btn font-bold\" \n                    :to=\"{name: 'AnnualUpdate', params: {uuid: group.uuid}}\"\n                    v-if=\"group.uuid\"\n                >\n                    Complete the Annual Update\n                </router-link>\n            </div>\n        </div>\n    </static-alert>\n</template>\n<script>\nimport { api } from '@/http';\nexport default {\n    name: 'AnnualUpdateAlert',\n    props: {\n        group: {\n            type: Object,\n            required: true,\n        },\n        showGroupName: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            annualReview: {},\n            loading: false\n        }\n    },\n    computed: {\n        window () {\n            return this.annualReview.window ? this.annualReview.window : {}\n        },\n\n        isPending() {\n            return this.annualReview && !(this.annualReview.completed_at)\n        },\n        \n        variant () {\n            const now = new Date();\n            if (!this.window.end) {\n                return 'warning';\n            }\n            const endDate = new Date(Date.parse(this.window.end));\n\n            return now > this.addDays(endDate, -7) ? 'danger' : 'warning';\n        }\n    },\n    watch: {\n        group: {\n            immediate: true,\n            handler () {\n                this.getAnnualUpdate();\n            }\n        }\n    },\n    methods: {\n        getAnnualUpdate () {\n            if (!this.group.uuid) {\n                return;\n            }\n\n            if (!this.group.expert_panel.definition_is_approved) {\n                return;\n            }\n\n            this.loading = true;\n            api.get(`/api/groups/${this.group.uuid}/expert-panel/annual-updates`, {headers: {'X-Ignore-Missing': 1} })\n                .then(response => {\n                    this.annualReview = response.data\n                })\n            this.loading = false;\n        }\n    }\n}\n</script>","import { render } from \"./AnnualUpdateAlert.vue?vue&type=template&id=7755c561\"\nimport script from \"./AnnualUpdateAlert.vue?vue&type=script&lang=js\"\nexport * from \"./AnnualUpdateAlert.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\n    import {judgementColor} from '@/composables/judgement_utils.js'\n    import {ref, onMounted} from 'vue'\n    import {useRouter} from 'vue-router'\n    import {api} from '@/http'\n    import {hasPermission} from '@/auth_utils';\n    import { featureIsEnabled } from '@/utils.js';\n\n    const router = useRouter();\n\n    const props = defineProps({\n        user: {\n            type: Object,\n            required: true\n        }\n    });\n\n    const fields = [\n        {\n            name: 'name',\n            label: 'Group',\n            sortable: true\n        },\n        {\n            name: 'submission.type.name',\n            label: 'Submissed Step',\n            sortable: true\n        },\n        {\n            name: 'submission.status.name',\n            label: 'Status',\n            sortable: true\n        },\n        {\n            name: 'last_submission_date',\n            label: 'Date',\n            sortable: true,\n            type: Date\n        },\n        {\n            name: 'actions',\n            label: '',\n            sortable: false\n        }\n    ];\n\n    const sort = ref({field: 'name', desc: false})\n\n    const groups = ref([]);\n    const getApplicationActivity = async () => {\n        groups.value = await api.get('/api/groups/applications').then(response => response.data.data)\n    }\n\n    const goToApplication = (group) => {\n        router.push({\n            name: 'ApplicationDetail',\n            params:{\n                uuid: group.uuid\n            }\n        });\n    }\n\n    const hasMadeJudgementOn = group => {\n        return group.submission.judgements\n            && group.submission.judgements.some(j => j.person_id == props.user.person.id);\n    }\n\n    const judgementFor = group => {\n        if (!group.submission.judgements) return {};\n\n        return group.submission.judgements.find(j => j.person_id == props.user.person.id);\n    }\n\n    onMounted(() => {\n        getApplicationActivity();\n    })\n\n</script>\n<template>\n    <div>\n        <h2>Application activity</h2>\n        <!-- <pre>{{groups}}</pre> -->\n        <data-table\n            :data=\"groups\"\n            :fields=\"fields\"\n            v-model:sort=\"sort\"\n            class=\"text-sm\"\n            @rowClick=\"goToApplication\"\n            row-class=\"cursor-pointer\"\n        >\n            <template v-slot:cell-actions=\"{item}\">\n                <div class=\"flex space-x-2\">\n                    <div v-if=\"hasMadeJudgementOn(item)\">\n                        <popper hover arrow placement=\"right\">\n                            <badge :color=\"judgementColor(item)\">\n                                <icon-checkmark class=\"text-white inline-block\" width=\"12\" height=\"12\"></icon-checkmark>\n                            </badge>\n\n                            <template v-slot:content>\n                                <div>\n                                    <h3 class=\"mb-2\">Your Decision</h3>\n                                    <badge class=\"inline-block\" :color=\"judgementColor(judgementFor(item))\" size=\"xs\">\n                                        {{judgementFor(item).decision}}\n                                    </badge>\n                                </div>\n                                <div v-if=\"judgementFor(item).notes\" class=\"mt-2\" style=\"max-width: 300px\">\n                                    <strong>Notes:</strong> {{judgementFor(item).notes}}\n                                </div>\n                                <hr>\n                                <router-link\n                                    :to=\"{name: 'ApplicationDetail', params: {uuid: item.uuid}}\"\n                                    :class=\"{'btn btn-xs': hasPermission('ep-applications-approve')}\"\n                                >\n                                    {{'Review'}}\n                                </router-link>\n\n                            </template>\n                        </popper>\n                    </div>\n\n                    <router-link v-else\n                        :to=\"{name: 'ApplicationDetail', params: {uuid: item.uuid}}\"\n                        class=\"btn btn-xs\"\n                    >\n                        {{hasPermission('ep-applications-manage') ? 'View' : 'Review'}}\n                    </router-link>\n\n                    <div>\n                        <popper hover arrow v-if=\"featureIsEnabled('chair-review')\">\n                            <badge v-if=\"hasPermission('ep-applications-manage') && item.submission.status.name == 'Under Chair Review'\" :color=\"item.submission.judgements.length == 3 ? 'green' : 'gray' \">\n                                {{item.submission.judgements.length}}/3\n                            </badge>\n\n                            <template v-slot:content>\n                                <h3>Decisions:</h3>\n                                <table style=\"max-width: 350px\" class=\"text-sm\">\n                                    <tr v-for=\"j in item.submission.judgements\" :key=\"j.id\">\n                                        <th>{{j.person.name}}:</th>\n                                        <td>\n                                            <badge class=\"inline-block\" :color=\"judgementColor(j)\">{{j.decision}}</badge>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </template>\n                        </popper>\n                    </div>\n                </div>\n            </template>\n        </data-table>\n    </div>\n</template>\n\n<style scoped>\n    table {\n        @apply border-none;\n    }\n    table td, table th {\n        @apply border-none text-left pl-0;\n    }\n</style>\n","import script from \"./ApplicationActivity.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ApplicationActivity.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ApplicationActivity.vue?vue&type=style&index=0&id=557e67ac&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-557e67ac\"]])\n\nexport default __exports__","<script setup>\n    import {computed, ref, onMounted} from 'vue'\n    import {api, queryStringFromParams} from '@/http'\n    import Group from '@/domain/group'\n    import AnnualUpdateAlert from '@/components/groups/AnnualUpdateAlert.vue';\n\n    const props = defineProps({\n        user: {\n            type: Object,\n            required: true\n        }\n    })\n    const sustainedCurationReviews = ref([]);\n    const getSustainedCurationReviewTasks = async () => {\n        const params = {\n            with: ['assignee'],\n            where: {\n                task_type_id: 1,\n                assignee_type: 'App\\\\Modules\\\\Group\\\\Models\\\\Group',\n                assignee_id: [...(new Set(coordinatingGroups.value.map(cg => cg.id)))],\n                pending: 1\n            }\n        }\n        const queryString = queryStringFromParams(params);\n        const url = `/api/tasks${queryString}`;\n        sustainedCurationReviews.value = await api.get(url)\n                                            .then(response => {\n                                                const uniqueTasks = {};\n                                                response.data.forEach(task => {\n                                                    uniqueTasks[task.assignee_id] = task;\n                                                })\n                                                return uniqueTasks;\n                                            });\n    }\n\n    const coordinatingGroups = computed(() => {\n        return props.user.memberships\n                .filter(m => m.hasPermission('annual-update-manage'))\n                .map(m => m.group)\n                .filter(g => g !== null)\n                .map(group => new Group(group))\n    });\n\n    \n    onMounted (() => {\n        getSustainedCurationReviewTasks();\n    })\n</script>\n<template>\n    <div>\n        <sustained-curation-review-alert\n            v-for=\"task in sustainedCurationReviews\" \n            :key=\"task.id\"\n            :group=\"task.assignee\"\n            class=\"mb-2\"\n        />\n\n        <annual-update-alert \n            v-for=\"group in coordinatingGroups\" :key=\"group.id\" \n            :group=\"group\"\n            :show-group-name=\"true\"\n            class=\"mb-2\"\n        />\n\n        <coi-alert\n            v-for=\"membership in user.person.membershipsWithPendingCois\" \n            :key=\"membership.id\"\n            :membership=\"membership\"\n            class=\"mb-2\"\n        />\n\n    </div>\n</template>","import script from \"./DashboardAlerts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DashboardAlerts.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <h1>\n            Dashboard\n            <div class=\"note font-normal\">\n                User ID: {{user.id}} | Person ID: {{user.person ? user.person.id : 'no person!!'}}\n            </div>\n        </h1>\n\n        <NotificationList :user=\"user\" />\n\n        <DashboardAlerts :user=\"user\" />\n\n        <ApplicationActivity :user=\"user\"\n            v-if=\"showApplicationActivity\"\n            class=\"screen-block\"\n        />\n\n        <tabs-container class=\"mt-8\">\n            <tab-item label=\"Your Groups\">\n                <div class=\"well\" v-if=\"!groups.length\">You are not assigned to any groups.</div>\n                <data-table\n                    v-else\n                    :data=\"groups\"\n                    :fields=\"groupFields\"\n                    v-model:sort=\"groupSort\"\n                    @rowClick=\"navigateToGroup\"\n                    row-class=\"cursor-pointer\"\n                >\n                    <template v-slot:cell-status_name=\"{value}\">\n                        <badge :color=\"groupBadgeColor(value)\">{{value}}</badge>\n                    </template>\n                    <template v-slot:cell-displayName=\"{item}\">\n                        {{item.name}} {{item.type.name.toUpperCase()}}\n                    </template>\n                </data-table>\n            </tab-item>\n\n            <tab-item label=\"Your Info\">\n                <person-profile :person=\"personFromStore\"></person-profile>\n            </tab-item>\n\n            <tab-item label=\"COIs\">\n                <coi-list :person=\"user.person\"></coi-list>\n            </tab-item>\n\n        </tabs-container>\n    </div>\n</template>\n<script setup>\n    import {useStore} from 'vuex'\n    import {useRouter} from 'vue-router'\n    import {ref, computed, onMounted, watch} from 'vue'\n    import CoiList from '@/components/people/CoiList.vue'\n    import PersonProfile from '@/components/people/PersonProfile.vue'\n    import Person from \"@/domain/person\"\n    import Group from \"@/domain/group\"\n    import configs from '@/configs'\n    import ApplicationActivity from '../components/dashboard/ApplicationActivity.vue';\n    import DashboardAlerts from '@/components/dashboard/DashboardAlerts.vue'\n    import NotificationList from '../components/NotificationList.vue'\n    import {featureIsEnabled} from '@/utils.js'\n    import {hasAnyPermission, hasPermission} from '@/auth_utils.js'\n\n    const store = useStore();\n    const router = useRouter();\n    const user = computed(() => {\n        return store.getters['currentUser']\n    });\n    const personFromStore = computed(() => {\n        return store.getters['people/currentItem'] || new Person();\n    })\n\n    const loadPersonInStore = () => {\n        if (user.value.id && user.value.person && user.value.person.id) {\n            store.commit('people/addItem', user.value.person);\n            store.commit('people/setCurrentItemIndex', user.value.person);\n        }\n    }\n\n    watch(() => user, () => {\n        loadPersonInStore();\n    });\n\n    onMounted(() => {\n        loadPersonInStore();\n    });\n\n    // GROUPS\n    // TODO: Get groups by search with TONS of info.\n    // TODO: Extract that work to a module.\n    const groups = computed(() => {\n        return user.value.memberships\n                .map(m => m.group)\n                .filter(g => g !== null)\n                .map(group => new Group(group))\n    });\n\n    const groupFields = ref([\n        {\n            name: 'displayName',\n            sortable: true,\n            type: String\n        },\n        {\n            name: 'status.name',\n            label: 'Status',\n            sortable: true,\n            resolveValue: (item) => {\n                if (item.status.id == configs.groups.statuses['applying'].id) {\n                    return item.status.name+' - '+item.expert_panel.currentStepName;\n                }\n                return item.status.name;\n            },\n            type: String\n        },\n    ]);\n    const groupSort = ref({\n        field: 'displayName',\n        desc: false\n    });\n\n    const groupBadgeColor = (status) => {\n        const map = {\n            Active: 'green',\n            Applying: 'blue',\n            Retired: 'yellow',\n            Removed: 'red'\n        }\n        return map[status] || 'blue'\n    };\n\n    const showApplicationActivity = computed(() => {\n        return hasPermission('ep-applications-manage')\n        || (\n            featureIsEnabled('chair_review')\n            && hasAnyPermission(['ep-applications-comment', 'ep-applications-approve'])\n        )\n    })\n\n    onMounted(async () => {\n        await store.dispatch('forceGetCurrentUser');\n    })\n\n    const navigateToGroup = (item) => {\n        router.push({\n            name: 'GroupDetail',\n            params: {uuid: item.uuid}\n        })\n    }\n</script>\n","import script from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["decToColor","judgementColor","judgement","decision","class","$options","$data","id","_createBlock","_component_static_alert","variant","_createElementVNode","_createVNode","_component_icon_review","height","width","$props","_createElementBlock","_hoisted_2","_toDisplayString","displayName","_hoisted_4","for_year","_ctx","end","uuid","_component_router_link","to","name","params","props","group","type","Object","required","showGroupName","Boolean","default","data","annualReview","loading","computed","window","this","isPending","completed_at","now","Date","endDate","parse","addDays","watch","immediate","handler","getAnnualUpdate","methods","expert_panel","definition_is_approved","api","headers","then","response","__exports__","render","router","useRouter","fields","label","sortable","sort","ref","field","desc","groups","getApplicationActivity","async","value","goToApplication","push","hasMadeJudgementOn","submission","judgements","some","j","person_id","user","person","judgementFor","find","onMounted","sustainedCurationReviews","getSustainedCurationReviewTasks","with","where","task_type_id","assignee_type","assignee_id","Set","coordinatingGroups","map","cg","pending","queryString","queryStringFromParams","url","uniqueTasks","forEach","task","memberships","filter","m","hasPermission","g","Group","store","useStore","getters","personFromStore","Person","loadPersonInStore","commit","groupFields","String","resolveValue","item","status","configs","statuses","currentStepName","groupSort","groupBadgeColor","Active","Applying","Retired","Removed","showApplicationActivity","featureIsEnabled","hasAnyPermission","dispatch","navigateToGroup"],"sourceRoot":""}