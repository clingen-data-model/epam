{"version":3,"sources":["webpack:///./src/views/PeopleIndex.vue","webpack:///./src/views/PeopleIndex.vue?66e1","webpack:///./src/composables/router_aware_sort_and_filter.js"],"names":["class","for","title","type","filter","placeholder","fields","data","people","filter-term","row-click-handler","goToPerson","row-class","sort","cell-uuid","goToEditPerson","item","name","sortable","String","label","components","props","computed","methods","person","this","$router","push","uuid","mounted","$store","dispatch","setup","render","defaultSort","router","useRouter","route","useRoute","field","desc","immediate","get","Object","keys","query","includes","Boolean","parseInt","set","sortObj","newSortQuery","newQuery","replace","path","value","currentQuery","currentPath","updatedQuery"],"mappings":"sJAEeA,MAAM,aAAaC,IAAI,gB,+BAAe,Y,yJADjD,yBAoBO,GApBDC,MAAM,UAAQ,C,8BAChB,iBAA2H,CAA3H,yBAA2H,QAA3H,EAA2H,C,8BAAjE,yBAAyD,SAAlDC,KAAK,O,qDAAgB,EAAAC,OAAM,IAAEC,YAAY,U,4BAApB,EAAAD,YACtF,yBAiBa,GAhBRE,OAAQ,EAAAA,OACRC,KAAI,EAAOC,OACZR,MAAM,aACLS,cAAa,EAAAL,OACbM,oBAAmB,EAAAC,WACpBC,YAAU,iBACFC,KAAM,EAAAA,K,+CAAA,EAAAA,KAAI,K,CAEDC,YAAS,sBACtB,SAD4B,GAC5B,MAD4B,CAC5B,yBAKS,UAJLd,MAAM,aACL,QAAK,+CAAO,EAAAe,eAAeC,EAAKA,QAAI,WACxC,SAED,mB,qHASVV,EAAS,CACC,CACIW,KAAM,OACNC,UAAU,EACVf,KAAMgB,QAEV,CACIF,KAAM,QACNC,UAAU,EACVf,KAAMgB,QAEV,CACIF,KAAM,OACNG,MAAO,GACPF,UAAU,IAIf,GACXG,WAAY,GAGZC,MAAO,GAGPf,KAPW,WAQP,MAAO,CACHD,OAAQA,IAGhBiB,SAAU,kBACH,eAAW,CACVf,OAAQ,gBAGhBgB,QAAS,CACLb,WADK,SACOc,GACRC,KAAKC,QAAQC,KAAK,WAAWH,EAAOI,OAExCd,eAJK,SAIWU,GACZC,KAAKC,QAAQC,KAAb,kBAA6BH,EAAOI,KAApC,YAGRC,QAzBW,WA0BPJ,KAAKK,OAAOC,SAAS,aAAc,KAEvCC,MA5BW,WA6BP,OAAO,mBCvEf,EAAOC,OAASA,EAED,gB,sICFA,kBAA8B,IAApBC,EAAoB,uDAAN,KAC7BC,EAASC,iBACTC,EAAQC,iBACdJ,EAAeA,GAA6B,CAACK,MAAO,OAAQC,MAAM,GAElE,IAAM5B,EAAOU,sBAAS,CAClBmB,WAAW,EACXC,IAFkB,WAGd,OAAIC,OAAOC,KAAKP,EAAMQ,OAAOC,SAAS,cAC3B,CACHP,MAAOF,EAAMQ,MAAM,cACnBL,KAAMO,QAAQC,SAASX,EAAMQ,MAAM,gBAGpCX,GAEXe,IAXkB,SAWdC,GACA,IAAMC,EAAe,CAAC,aAAcD,EAAQX,MAAO,YAAaW,EAAQV,KAAO,EAAI,GAE7EY,EAAW,iCACVf,EAAMQ,OACNM,GAGPhB,EAAOkB,QAAQ,CAACC,KAAMjB,EAAMiB,KAAMT,MAAOO,OAI3CjD,EAASmB,sBAAS,CACpB2B,IADoB,SAChBM,GACA,IAAIC,EAAenB,EAAMQ,MACrBY,EAAcpB,EAAMiB,KAEpBI,EAAe,kBAAIF,GAElBD,EAGDG,EAAe,iCAAIF,GAAiB,CAAC,OAAUD,WAFxCG,EAAavD,OAKxBgC,EAAOkB,QAAQ,CAACC,KAAMG,EAAaZ,MAAOa,KAE9ChB,IAfoB,WAgBhB,OAAOL,EAAMQ,MAAM1C,QAEvBsC,WAAW,IAGf,MAAO,CACH7B,OACAT","file":"js/chunk-1ab0aab5.57c705a7.js","sourcesContent":["<template>\n    <card title=\"People\">\n        <label class=\"block mb-2\" for=\"filter-input\">Filter:&nbsp;<input type=\"text\" v-model=\"filter\" placeholder=\"filter\"></label>\n        <data-table \n            :fields=\"fields\" \n            :data=\"this.people\"\n            class=\"width-full\"\n            :filter-term=\"filter\" \n            :row-click-handler=\"goToPerson\"\n            row-class=\"cursor-pointer\"\n            v-model:sort=\"sort\"\n        >\n            <template v-slot:cell-uuid=\"item\">\n                <button \n                    class=\"btn btn-xs\" \n                    @click.stop=\"goToEditPerson(item.item)\"\n                > \n                    Edit\n                </button>\n            </template>\n        </data-table>\n    </card>\n</template>\n<script>\nimport { mapGetters } from 'vuex'\nimport SortAndFilter from './../composables/router_aware_sort_and_filter';\n\nconst fields = [\n                {\n                    name: 'name',\n                    sortable: true,\n                    type: String\n                },\n                {\n                    name: 'email',\n                    sortable: true,\n                    type: String\n                },\n                {\n                    name: 'uuid',\n                    label: '',\n                    sortable: false\n                }\n            ];\n\nexport default {\n    components: {\n        // DataTable  \n    },\n    props: {\n        \n    },\n    data() {\n        return {\n            fields: fields\n        }\n    },\n    computed: {\n        ...mapGetters({\n            people: 'people/all'\n        })\n    },\n    methods: {\n        goToPerson (person) {\n            this.$router.push('/people/'+person.uuid)\n        },\n        goToEditPerson (person) {\n            this.$router.push(`/people/${person.uuid}/edit`)\n        }\n    },\n    mounted() {\n        this.$store.dispatch('people/all', {})\n    },\n    setup() {\n        return SortAndFilter()\n    }\n}\n</script>","import { render } from \"./PeopleIndex.vue?vue&type=template&id=037ac421\"\nimport script from \"./PeopleIndex.vue?vue&type=script&lang=js\"\nexport * from \"./PeopleIndex.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { useRouter, useRoute } from 'vue-router'\nimport {computed} from 'vue'\n\nexport default function (defaultSort = null) {\n    const router = useRouter()\n    const route = useRoute()\n    defaultSort = (defaultSort) ? defaultSort : {field: 'name', desc: false}\n    \n    const sort = computed({\n        immediate: true,\n        get() {\n            if (Object.keys(route.query).includes('sort-field')) {\n                return {\n                    field: route.query['sort-field'],\n                    desc: Boolean(parseInt(route.query['sort-desc']))\n                }\n            }\n            return defaultSort;\n        },\n        set(sortObj) {\n            const newSortQuery = {'sort-field': sortObj.field, 'sort-desc': sortObj.desc ? 1 : 0}\n    \n            const newQuery = {\n                ...route.query, \n                ...newSortQuery\n            };\n    \n            router.replace({path: route.path, query: newQuery})\n        }\n    });\n    \n    const filter = computed({\n        set(value) {\n            let currentQuery = route.query;\n            let currentPath = route.path;\n    \n            let updatedQuery = {...currentQuery};\n    \n            if (!value) {\n                delete updatedQuery.filter;\n            } else {\n                updatedQuery = {...currentQuery, ...{'filter': value} };\n            }\n    \n            router.replace({path: currentPath, query: updatedQuery})\n        },\n        get() {\n            return route.query.filter\n        },\n        immediate: true\n    });\n\n    return {\n        sort,\n        filter\n    }\n}\n"],"sourceRoot":""}