{"version":3,"sources":["webpack:///./src/components/log_entries/LogEntryForm.vue","webpack:///./src/components/log_entries/LogEntryForm.vue?14e9","webpack:///./src/adapters/log_entry_repository.js"],"names":["class","_createBlock","_component_form_container","ref","_createElementVNode","_toDisplayString","$route","meta","title","_createVNode","_component_input_row","label","$data","log_date","$event","errors","type","$options","expert_panel_type_id","_component_step_input","step","entry","_component_rich_text_editor","_component_button_row","onClick","name","components","StepInput","RichTextEditor","props","id","required","default","data","newEntry","Date","computed","mapGetters","group","application","this","expert_panel","watch","immediate","handler","findEntry","syncEntry","methods","logEntries","find","i","initNewEntry","formatDate","parse","created_at","properties","description","cancel","$emit","save","updateEntry","uuid","saveEntry","response","status","mounted","$el","querySelectorAll","focus","setup","__exports__","render","_entries","value","fetchEntries","apiUrl","api","get","then","entryData","post","push","put","entryIdx","findIndex","deleteEntry","entryId","delete","splice"],"mappings":"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","file":"js/log-entry-form.2d387a60.js","sourcesContent":["<template>\n    <form-container class=\"log-entry-form\" ref=\"form-container\">\n        <h2 class=\"block-title\">{{this.$route.meta.title}}</h2>\n        <input-row label=\"Log Date\" v-model=\"newEntry.log_date\" :errors=\"errors.log_date\" type=\"date\" ref=\"logdate\"></input-row>\n        <step-input v-model=\"newEntry.step\" :errors=\"errors.step\" v-if=\"application.expert_panel_type_id == 2\"></step-input>\n        <input-row label=\"Entry\" :errors=\"errors.entry\">\n            <rich-text-editor v-model=\"newEntry.entry\"></rich-text-editor>\n        </input-row>\n        <button-row>\n            <button class=\"btn\" @click=\"cancel\">Cancel</button>\n            <button class=\"btn blue\" @click=\"save\">Save</button>\n        </button-row>\n    </form-container>\n</template>\n<script>\nimport {mapGetters} from 'vuex'\nimport { formatDate } from '@/date_utils'\nimport StepInput from '@/components/forms/StepInput'\nimport RichTextEditor from '@/components/forms/RichTextEditor'\nimport {logEntries, saveEntry, updateEntry} from '@/adapters/log_entry_repository'\n\nexport default {\n    name: 'LogEntryForm',\n    components: {\n        StepInput,\n        RichTextEditor\n    },\n    props: {\n        id: {\n            required: false,\n            default: null\n        }\n    },\n    data() {\n        return {\n            newEntry: {\n                log_date: new Date(),\n                step: null,\n                entry: ''\n            },\n            errors: {},\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        }\n    },\n    watch: {\n        id: {\n            immediate: true,\n            handler: function() {\n                const entry = this.findEntry();\n                if (entry) {\n                    this.syncEntry(entry)\n                }\n            }\n        },\n        application: {\n            immediate: true,\n            handler: function () {\n                const entry = this.findEntry();\n                if (entry) {\n                    this.syncEntry(entry);\n                }\n            }\n        }\n    },\n    methods: {\n        findEntry () {\n            if (this.id === null) {\n                return null;\n            }\n            if (this.logEntries) {\n                return this.logEntries.find(i => i.id == this.id);\n            }\n        },\n        initNewEntry () {\n            this.newEntry = {\n                log_date: formatDate(new Date),\n                step: null,\n                entry: ''\n            }\n        },\n        syncEntry (entry) {\n            if (!entry) {\n                return;\n            }\n            this.newEntry = {\n                id: entry.id,\n                log_date: formatDate(new Date(Date.parse((entry.created_at)))),\n                step: entry.properties.step,\n                entry: entry.description\n            }\n        },\n        cancel() {\n            this.initNewEntry();\n            this.$emit('canceled');\n        },\n        async save() {\n            try {\n                if (this.newEntry.id) {\n                    updateEntry(`/api/groups/${this.group.uuid}/activity-logs/${this.newEntry.id}`, this.newEntry);\n                } else {\n                    saveEntry(`/api/groups/${this.group.uuid}/activity-logs`, this.newEntry)\n                }\n                this.initNewEntry();\n                this.$emit('saved');\n            } catch (error) {\n                if (error.response && error.response.status == 422 && error.response.data.errors) {\n                    this.errors = error.response.data.errors\n                    return;\n                }\n            }\n        },\n    },\n    mounted() {\n        this.$el.querySelectorAll('input')[0].focus();\n    },\n    setup () {\n        return {\n            logEntries\n        }\n    }\n}\n</script>","import { render } from \"./LogEntryForm.vue?vue&type=template&id=4c1d97d7\"\nimport script from \"./LogEntryForm.vue?vue&type=script&lang=js\"\nexport * from \"./LogEntryForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {ref, computed} from 'vue';\nimport api from '@/http/api'\n\nconst _entries = ref([]);\n\nexport const logEntries = computed(() => {\n    return _entries.value;\n});\n\nexport const fetchEntries = async (apiUrl) => {\n    _entries.value = await api.get(apiUrl)\n        .then(response => response.data.data);\n}\n\nexport const saveEntry = async (apiUrl, entryData) => {\n    return await api.post(apiUrl, entryData)\n        .then(response => {\n            _entries.value.push(response.data);\n            return response.data\n        });\n}\n\nexport const updateEntry = async (apiUrl, entryData) => {\n    return await api.put(apiUrl, entryData)\n        .then(response => {\n            const entryIdx = _entries.value.findIndex(entry => entry.id == response.data.id);\n            _entries.value[entryIdx] = response.data;\n            return response.data\n        });\n}\n\nexport const deleteEntry = async (apiUrl, entryId) => {\n    return await api.delete(`${apiUrl}/${entryId}`)\n        .then(response => {\n            const entryIdx = _entries.value.findIndex(entry => entry.id == entryId);\n            _entries.value.splice(entryIdx, 1);\n\n            return response;\n        });\n}\n"],"sourceRoot":""}