{"version":3,"sources":["webpack:///./src/http/is_validation_error.js","webpack:///./src/views/LoginPage.vue","webpack:///./src/components/LoginForm.vue","webpack:///./src/components/LoginForm.vue?e49b","webpack:///./src/views/LoginPage.vue?d962"],"names":["error","response","status","data","errors","title","class","redirect","authenticate","email","label","type","required","password","to","props","emits","computed","methods","$store","dispatch","is_validation_error","$emit","render","name","components","LoginForm","watch","isAuthed","this","redirectIfAuthed","routeName","$route","query","$router","push","mounted"],"mappings":"kHAAe,gBAAUA,GACrB,OAAOA,EAAMC,UAAqC,KAAzBD,EAAMC,SAASC,QAAiBF,EAAMC,SAASE,KAAKC,S,6MCA7E,yBAEO,GAFDC,MAAM,QAAQC,MAAM,oB,+BACtB,iBAAmD,CAAnD,yBAAmD,GAAtC,gBAAe,EAAAC,UAAQ,gC,qDCG2C,yB,wPAJnF,yBAOiB,GAPA,QAAK,sBAAQ,EAAAC,aAAY,Y,+BACtC,iBAAiG,CAAjG,yBAAiG,G,WAA7E,EAAAC,M,qDAAA,EAAAA,MAAK,IAAEC,MAAM,QAAQC,KAAK,OAAQP,OAAQ,EAAAA,OAAOK,MAAOG,SAAA,I,gCAC5E,yBAA8G,G,WAA1F,EAAAC,S,qDAAA,EAAAA,SAAQ,IAAEH,MAAM,WAAWC,KAAK,WAAYP,OAAQ,EAAAA,OAAOS,SAAUD,SAAA,I,gCAEzF,yBAAsH,UAAnH,yBAA+G,GAAlGN,MAAM,0BAA2BQ,GAAI,yB,+BAA0B,iBAAqB,C,cAEpG,yBAAuF,Q,8BAA3E,iBAA8D,CAA9D,yBAA8D,UAAtDR,MAAM,WAAY,QAAK,8BAAE,EAAAE,cAAA,EAAAA,aAAA,sBAAc,c,gFAOpD,GACXO,MAAO,GAEPZ,KAHW,WAIP,MAAO,CACHM,MAAO,KACPI,SAAU,KACVT,OAAQ,KAGhBY,MAAO,CACH,gBACA,wBAEJC,SAAU,GAGVC,QAAS,CACCV,aADD,WACgB,iLAEP,EAAKW,OAAOC,SAAS,QAAS,CAACX,MAAO,EAAKA,MAAOI,SAAU,EAAKA,WAF1D,+DAIT,OAAAQ,EAAA,MAAoB,EAAD,MACnB,EAAKjB,OAAS,KAAEH,SAASE,KAAKC,OAC9B,EAAKkB,MAAM,yBANF,sCAYP,EAAKH,OAAOC,SAAS,kBAZd,mEAcT,eAAY,EAAD,KACX,EAAKE,MAAM,wBAfF,aAmBjB,EAAKA,MAAM,iBAnBM,qEC7B7B,EAAOC,OAAS,EAED,Q,YFKA,GACXC,KAAM,YACNC,WAAY,CACRC,aAEJT,SAAU,kBACH,eAAW,CAAC,cAEnBU,MAAO,CACHC,SAAU,WACNC,KAAKC,qBAGbZ,QAAS,CACLX,SADK,WAED,IAAIwB,EAAY,OACZF,KAAKG,OAAOC,OAASJ,KAAKG,OAAOC,MAAM1B,WACvCwB,EAAYF,KAAKG,OAAOC,MAAM1B,UAElCsB,KAAKK,QAAQC,KAAK,CAACX,KAAMO,KAE7BD,iBARK,WASGD,KAAKD,UACLC,KAAKtB,aAIjB6B,QA3BW,WA4BPP,KAAKC,qBGnCb,EAAOP,OAASA,EAED","file":"js/chunk-d5bd964a.c1559b14.js","sourcesContent":["export default function (error) {\n    return error.response && error.response.status == 422 && error.response.data.errors\n}","<template>\n    <card title=\"Login\" class=\"lg:w-1/2 mx-auto\">\n        <login-form @authenticated=\"redirect\"></login-form>\n    </card>\n    <!-- <pre>{{$route.path}}</pre> -->\n</template>\n<script>\nimport LoginForm from '../components/LoginForm';\nimport { mapGetters } from 'vuex'\n\nexport default {\n    name: \"LoginPage\",\n    components: {\n        LoginForm\n    },\n    computed: {\n        ...mapGetters(['isAuthed'])\n    },\n    watch: {\n        isAuthed: function () {\n            this.redirectIfAuthed();\n        }\n    },\n    methods: {\n        redirect() {\n            let routeName = 'home';\n            if (this.$route.query && this.$route.query.redirect) {\n                routeName = this.$route.query.redirect\n            }\n            this.$router.push({name: routeName})\n        },\n        redirectIfAuthed(){\n            if (this.isAuthed) {\n                this.redirect()\n            }\n        }\n    },\n    mounted() {\n        this.redirectIfAuthed();\n    }\n}\n</script>","<template>\n    <form-container @keyup.enter=\"authenticate\">\n        <input-row v-model=\"email\" label=\"Email\" type=\"text\" :errors=\"errors.email\" required></input-row>\n        <input-row v-model=\"password\" label=\"Password\" type=\"password\" :errors=\"errors.password\" required></input-row>\n        \n        <p><router-link class=\"text-blue-500 underline\" :to=\"{name: 'reset-password'}\">Forget your password?</router-link></p>\n\n        <button-row><button class=\"btn blue\" @click=\"authenticate\">Log in</button></button-row>\n    </form-container>\n</template>\n<script>\nimport is_validation_error from '../http/is_validation_error'\nimport isAuthError from '../http/is_auth_error'\n\nexport default {\n    props: {\n    },\n    data() {\n        return {\n            email: null,\n            password: null,\n            errors: {}\n        }\n    },\n    emits: [\n        'authenticated',\n        'authenticationFailed'\n    ],\n    computed: {\n\n    },\n    methods: {\n        async authenticate() {\n            try {\n                await this.$store.dispatch('login', {email: this.email, password: this.password})\n            } catch (e) {\n                if (is_validation_error(e)) {\n                    this.errors = e.response.data.errors\n                    this.$emit('authenticationFailed')\n                }\n                throw e;\n            }\n\n            try {\n                await this.$store.dispatch('getCurrentUser')\n            } catch (e) {\n                if (isAuthError(e)) {\n                    this.$emit('authenticationFailed')\n                }\n                throw e\n            }\n            this.$emit('authenticated');\n\n        }\n    }\n}\n</script>","import { render } from \"./LoginForm.vue?vue&type=template&id=2972f5a3\"\nimport script from \"./LoginForm.vue?vue&type=script&lang=js\"\nexport * from \"./LoginForm.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./LoginPage.vue?vue&type=template&id=7a910472\"\nimport script from \"./LoginPage.vue?vue&type=script&lang=js\"\nexport * from \"./LoginPage.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}