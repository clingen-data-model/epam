{"version":3,"sources":["webpack:///./src/views/PeopleList.vue","webpack:///./src/views/PeopleList.vue?de27","webpack:///./src/composables/router_aware_sort_and_filter.js"],"names":["_createElementVNode","class","for","_createElementBlock","_hoisted_1","_createVNode","_component_data_table","fields","$data","data","$options","row-click-handler","row-class","sort","$setup","$event","paginated","header","type","placeholder","name","sortable","String","label","resolveSort","item","institution","components","props","computed","mapGetters","people","currentUser","filteredPeople","this","filter","rx","RegExp","p","match","email","watch","immediate","handler","currentPage","methods","goToPerson","person","$router","push","uuid","goToEditPerson","canEdit","hasPermission","id","user_id","mounted","$store","dispatch","setup","SortAndFilter","pageSize","getPageItems","__exports__","render","defaultSort","router","useRouter","route","useRoute","console","log","field","desc","get","Object","keys","query","includes","Boolean","parseInt","set","sortObj","newSortQuery","newQuery","replace","path","value","currentQuery","currentPath","updatedQuery"],"mappings":"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","file":"js/chunk-b9c33442.e54fd75c.js","sourcesContent":["<template>\n    <div>\n        <h1>People</h1>\n        <data-table \n            :fields=\"fields\" \n            :data=\"filteredPeople\"\n            class=\"width-full\"\n            :row-click-handler=\"goToPerson\"\n            row-class=\"cursor-pointer\"\n            v-model:sort=\"sort\"\n            paginated\n        >\n            <template v-slot:header>\n                <label class=\"block mb-2\" for=\"filter-input\">Filter:&nbsp;<input type=\"text\" v-model=\"filter\" placeholder=\"filter\"></label>\n\n            </template>\n        </data-table>\n    </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex'\nimport SortAndFilter from './../composables/router_aware_sort_and_filter';\nimport {pageSize, currentPage, getPageItems} from '@/composables/pagination'\n\nconst fields = [\n                {\n                    name: 'name',\n                    sortable: true,\n                    type: String\n                },\n                {\n                    name: 'email',\n                    sortable: true,\n                    type: String\n                },\n                {\n                    name: 'institution.name',\n                    label: 'Institution',\n                    sortable: true,\n                    type: String,\n                    resolveSort (item) {\n                        return item.institution ? item.institution.name : '';\n                    }\n                }\n            ];\n\nexport default {\n    components: {\n        // DataTable  \n    },\n    props: {\n        \n    },\n    data() {\n        return {\n            fields: fields\n        }\n    },\n    computed: {\n        ...mapGetters({\n            people: 'people/all',\n            currentUser: 'currentUser'\n        }),\n        filteredPeople () {\n            if (!this.filter) {\n                return this.people;\n            }\n            const rx = new RegExp(`.*${this.filter}.*`, 'i');\n            return this.people.filter(p => {\n                return p.name.match(rx)\n                    || p.email.match(rx)\n                    || (p.institution && p.institution.name.match(rx));\n            })\n        }\n    },\n    watch: {\n        filter: {\n            immediate: true,\n            handler () {\n                this.currentPage = 0;\n            }\n        },\n        sort: {\n            immediate: true,\n            handler () {\n                this.currentPage = 0;\n            }\n        }\n    },\n    methods: {\n        goToPerson (person) {\n            this.$router.push('/people/'+person.uuid)\n        },\n        goToEditPerson (person) {\n            this.$router.push(`/people/${person.uuid}/edit`)\n        },\n        canEdit(person) {\n            if (this.hasPermission('people-manage')) {\n                return true;\n            }\n            if (this.currentUser.id == person.user_id) {\n                return true;\n            }\n\n            return false;\n        }\n    },\n    mounted() {\n        this.$store.dispatch('people/all', {})\n    },\n    setup() {\n        const {sort, filter} = SortAndFilter();\n\n        return {\n            sort, filter,\n            pageSize, currentPage, getPageItems\n        }\n    }\n}\n</script>","import { render } from \"./PeopleList.vue?vue&type=template&id=53c8f9c9\"\nimport script from \"./PeopleList.vue?vue&type=script&lang=js\"\nexport * from \"./PeopleList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yugen/code/new-epam/resources/app/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { useRouter, useRoute } from 'vue-router'\nimport {computed} from 'vue'\n\nexport default function (defaultSort = null) {\n    const router = useRouter()\n    const route = useRoute()\n    if (!defaultSort){\n        console.log('Warning: defaultSort is deprecated.  Please provide a sort object: {field: \"fieldname\", desc: boolean}')\n        defaultSort = (defaultSort) ? defaultSort : {field: 'name', desc: false}\n    }\n    \n    const sort = computed({\n        immediate: true,\n        get() {\n            if (Object.keys(route.query).includes('sort-field')) {\n                return {\n                    field: route.query['sort-field'],\n                    desc: Boolean(parseInt(route.query['sort-desc']))\n                }\n            }\n            return defaultSort;\n        },\n        set(sortObj) {\n            const newSortQuery = {'sort-field': sortObj.field, 'sort-desc': sortObj.desc ? 1 : 0}\n    \n            const newQuery = {\n                ...route.query, \n                ...newSortQuery\n            };\n    \n            router.replace({path: route.path, query: newQuery})\n        }\n    });\n    \n    const filter = computed({\n        set(value) {\n            let currentQuery = route.query;\n            let currentPath = route.path;\n    \n            let updatedQuery = {...currentQuery};\n    \n            if (!value) {\n                delete updatedQuery.filter;\n            } else {\n                updatedQuery = {...currentQuery, ...{'filter': value} };\n            }\n    \n            router.replace({path: currentPath, query: updatedQuery})\n        },\n        get() {\n            return route.query.filter\n        },\n        immediate: true\n    });\n\n    return {\n        sort,\n        filter\n    }\n}\n"],"sourceRoot":""}